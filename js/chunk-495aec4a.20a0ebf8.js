(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-495aec4a"],{"10a8":function(e,t,l){var n=l("24fb");t=n(!1),t.push([e.i,".p-dropdown[data-v-b83aa88c]{width:14rem}.country-item-value img.flag[data-v-b83aa88c]{width:17px}",""]),e.exports=t},"6b86":function(e,t,l){"use strict";l.r(t);l("b0c0");var n=l("7a23"),o=l("2d77"),a=l.n(o),c=function(e){return Object(n["K"])("data-v-b83aa88c"),e=e(),Object(n["I"])(),e},i={class:"content-section introduction"},r=c((function(){return Object(n["k"])("div",{class:"feature-intro"},[Object(n["k"])("h1",null,"Dropdown"),Object(n["k"])("p",null,"Dropdown is used to select an item from a list of options.")],-1)})),u={class:"content-section implementation"},s={class:"card"},d=c((function(){return Object(n["k"])("h5",null,"Basic",-1)})),b=c((function(){return Object(n["k"])("h5",null,"Editable",-1)})),p=c((function(){return Object(n["k"])("h5",null,"Grouped",-1)})),O={class:"flex align-items-center country-item"},j=c((function(){return Object(n["k"])("h5",null,"Advanced with Templating, Filtering and Clear Icon",-1)})),k={key:0,class:"country-item country-item-value"},h={key:1},m={class:"country-item"},f=c((function(){return Object(n["k"])("h5",null,"Loading State",-1)})),v=c((function(){return Object(n["k"])("h5",null,"Virtual Scroll (100000 Items)",-1)})),y=c((function(){return Object(n["k"])("h5",null,"Virtual Scroll (100000 Items) and Lazy",-1)})),g={class:"flex align-items-center p-2",style:{height:"38px"}};function w(e,t,l,o,c,w){var C=Object(n["P"])("AppDemoActions"),I=Object(n["P"])("Dropdown"),L=Object(n["P"])("Skeleton"),S=Object(n["P"])("DropdownDoc");return Object(n["H"])(),Object(n["j"])("div",null,[Object(n["k"])("div",i,[r,Object(n["o"])(C)]),Object(n["k"])("div",u,[Object(n["k"])("div",s,[d,Object(n["o"])(I,{modelValue:c.selectedCity1,"onUpdate:modelValue":t[0]||(t[0]=function(e){return c.selectedCity1=e}),options:c.cities,optionLabel:"name",optionValue:"code",placeholder:"Select a City"},null,8,["modelValue","options"]),b,Object(n["o"])(I,{modelValue:c.selectedCity2,"onUpdate:modelValue":t[1]||(t[1]=function(e){return c.selectedCity2=e}),options:c.cities,optionLabel:"name",editable:!0},null,8,["modelValue","options"]),p,Object(n["o"])(I,{modelValue:c.selectedGroupedCity,"onUpdate:modelValue":t[2]||(t[2]=function(e){return c.selectedGroupedCity=e}),options:c.groupedCities,optionLabel:"label",optionGroupLabel:"label",optionGroupChildren:"items"},{optiongroup:Object(n["Z"])((function(e){return[Object(n["k"])("div",O,[Object(n["k"])("img",{src:a.a,class:Object(n["A"])("flag flag-"+e.option.code.toLowerCase()),width:"18"},null,2),Object(n["k"])("div",null,Object(n["T"])(e.option.label),1)])]})),_:1},8,["modelValue","options"]),j,Object(n["o"])(I,{modelValue:c.selectedCountry,"onUpdate:modelValue":t[3]||(t[3]=function(e){return c.selectedCountry=e}),options:c.countries,optionLabel:"name",filter:!0,placeholder:"Select a Country",showClear:!0},{value:Object(n["Z"])((function(e){return[e.value?(Object(n["H"])(),Object(n["j"])("div",k,[Object(n["k"])("img",{src:a.a,class:Object(n["A"])("flag flag-"+e.value.code.toLowerCase())},null,2),Object(n["k"])("div",null,Object(n["T"])(e.value.name),1)])):(Object(n["H"])(),Object(n["j"])("span",h,Object(n["T"])(e.placeholder),1))]})),option:Object(n["Z"])((function(e){return[Object(n["k"])("div",m,[Object(n["k"])("img",{src:a.a,class:Object(n["A"])("flag flag-"+e.option.code.toLowerCase())},null,2),Object(n["k"])("div",null,Object(n["T"])(e.option.name),1)])]})),_:1},8,["modelValue","options"]),f,Object(n["o"])(I,{placeholder:"Loading...",loading:""}),v,Object(n["o"])(I,{modelValue:c.selectedItem1,"onUpdate:modelValue":t[4]||(t[4]=function(e){return c.selectedItem1=e}),options:c.items,optionLabel:"label",optionValue:"value",virtualScrollerOptions:{itemSize:38},placeholder:"Select Item"},null,8,["modelValue","options"]),y,Object(n["o"])(I,{modelValue:c.selectedItem2,"onUpdate:modelValue":t[5]||(t[5]=function(e){return c.selectedItem2=e}),options:c.lazyItems,optionLabel:"label",optionValue:"value",virtualScrollerOptions:{lazy:!0,onLazyLoad:w.onLazyLoad,itemSize:38,showLoader:!0,loading:c.loading,delay:250},placeholder:"Select Item"},{loader:Object(n["Z"])((function(e){var t=e.options;return[Object(n["k"])("div",g,[Object(n["o"])(L,{width:t.even?"60%":"50%",height:"1rem"},null,8,["width"])])]})),_:1},8,["modelValue","options","virtualScrollerOptions"])])]),Object(n["o"])(S)])}var C=l("2909"),I=(l("a630"),l("3ca3"),Object(n["k"])("h5",null,"Import via Module",-1)),L=Object(n["k"])("code",null,"\nimport Dropdown from 'primevue/dropdown';\n\n",-1),S=[L],D=Object(n["k"])("h5",null,"Import via CDN",-1),P=Object(n["k"])("code",null,'\n<script src="https://unpkg.com/primevue@^3/core/core.min.js"><\/script>\n\n',-1),z=[P],T=Object(n["k"])("h5",null,"Getting Started",-1),F=Object(n["k"])("p",null,[Object(n["n"])("Dropdown requires a value to bind and a collection of arbitrary objects along with the "),Object(n["k"])("i",null,"optionLabel"),Object(n["n"])(" property to specify the label property of the option.")],-1),A=Object(n["k"])("code",null,'\n<Dropdown v-model="selectedCity" :options="cities" optionLabel="name" placeholder="Select a City" />\n\n',-1),M=[A],V=Object(n["k"])("code",null,"\ndata() {\n\treturn {\n\t\tselectedCity: null,\n\t\tcities: [\n\t\t\t{name: 'New York', code: 'NY'},\n\t\t\t{name: 'Rome', code: 'RM'},\n\t\t\t{name: 'London', code: 'LDN'},\n\t\t\t{name: 'Istanbul', code: 'IST'},\n\t\t\t{name: 'Paris', code: 'PRS'}\n\t\t]\n\t}\n}\n\n",-1),x=[V],N=Object(n["k"])("h5",null,"Placeholder",-1),G=Object(n["k"])("p",null,"Common pattern is providing an empty option as the placeholder when using native selects, however Dropdown has built-in support using the placeholder option so it is suggested to use it instead of creating an empty option.",-1),E=Object(n["k"])("h5",null,"Grouping",-1),H=Object(n["k"])("p",null,[Object(n["n"])("Options groups are specified with the "),Object(n["k"])("i",null,"optionGroupLabel"),Object(n["n"])(" and "),Object(n["k"])("i",null,"optionGroupChildren"),Object(n["n"])(" properties.")],-1),U=Object(n["k"])("code",null,"\nexport default {\n    data() {\n        return {\n            selectedGroupedCity: null,\n            groupedCities: [{\n                label: 'Germany', code: 'DE',\n                items: [\n                    {label: 'Berlin', value: 'Berlin'},\n                    {label: 'Frankfurt', value: 'Frankfurt'},\n                    {label: 'Hamburg', value: 'Hamburg'},\n                    {label: 'Munich', value: 'Munich'}\n                ]\n            },\n            {\n                label: 'USA', code: 'US',\n                items: [\n                    {label: 'Chicago', value: 'Chicago'},\n                    {label: 'Los Angeles', value: 'Los Angeles'},\n                    {label: 'New York', value: 'New York'},\n                    {label: 'San Francisco', value: 'San Francisco'}\n                ]\n            },\n            {\n                label: 'Japan', code: 'JP',\n                items: [\n                    {label: 'Kyoto', value: 'Kyoto'},\n                    {label: 'Osaka', value: 'Osaka'},\n                    {label: 'Tokyo', value: 'Tokyo'},\n                    {label: 'Yokohama', value: 'Yokohama'}\n                ]\n            }]\n        }\n    }\n}\n",-1),Y=[U],R=Object(n["k"])("code",null,[Object(n["k"])("template",null,[Object(n["n"])('\n<Dropdown v-model="selectedGroupedCity" :options="groupedCities"\n        optionLabel="label" optionGroupLabel="label" optionGroupChildren="items">\n</Dropdown>\n')]),Object(n["n"])("\n")],-1),B=[R],J=Object(n["k"])("h5",null,"Filtering",-1),K=Object(n["k"])("p",null,[Object(n["n"])(" Filtering allows searching items in the list using an input field at the header. In order to use filtering, enable "),Object(n["k"])("i",null,"filter"),Object(n["n"])(" property. By default, optionLabel is used when searching and "),Object(n["k"])("i",null,"filterFields"),Object(n["n"])(" can be used to customize the fields being utilized. Furthermore, "),Object(n["k"])("i",null,"filterMatchMode"),Object(n["n"])(' is available to define the search algorithm. Valid values are "contains" (default), "startsWith" and "endsWith". ')],-1),W=Object(n["k"])("code",null,'\n<Dropdown v-model="selectedCar" :options="cars" optionLabel="brand" placeholder="Select a Car" :filter="true" filterPlaceholder="Find Car"/>\n\n',-1),_=[W],Z=Object(n["k"])("h5",null,"Templating",-1),$=Object(n["k"])("p",null,[Object(n["n"])(" Label of an option is used as the display text of an item by default, for custom content support define an "),Object(n["k"])("i",null,"option"),Object(n["n"])(" template that gets the option instance as a parameter. In addition "),Object(n["k"])("i",null,"value"),Object(n["n"])(", "),Object(n["k"])("i",null,"optiongroup"),Object(n["n"])(", "),Object(n["k"])("i",null,"header"),Object(n["n"])(", "),Object(n["k"])("i",null,"footer"),Object(n["n"])(", "),Object(n["k"])("i",null,"emptyfilter"),Object(n["n"])(" and "),Object(n["k"])("i",null,"empty"),Object(n["n"])(" slots are provided for further customization. ")],-1),q=Object(n["k"])("code",null,[Object(n["k"])("template",null,[Object(n["n"])('\n<Dropdown v-model="selectedCar" :options="cars" optionLabel="brand" :filter="true" placeholder="Select a Car" :showClear="true">\n    <template #value="slotProps">\n        <div class="p-dropdown-car-value" v-if="slotProps.value">\n            <img :alt="slotProps.value.brand" :src="\'demo/images/car/\' + slotProps.value.brand + \'.png\'" />\n            <span>{{slotProps.value.brand}}</span>\n        </div>\n        <span v-else>\n            {{slotProps.placeholder}}\n        </span>\n    </template>\n    <template #option="slotProps">\n\t\t<div class="p-dropdown-car-option">\n\t\t\t<img :alt="slotProps.option.brand" :src="\'demo/images/car/\' + slotProps.option.brand + \'.png\'" />\n\t\t\t<span>{{slotProps.option.brand}}</span>\n\t\t</div>\n\t</template>\n</Dropdown>\n')]),Object(n["n"])("\n")],-1),Q=[q],X=Object(n["k"])("h5",null,"Properties",-1),ee=Object(n["k"])("p",null,"Any property of HTMLDivElement are passed to the main container element. Following are the additional properties to configure the component.",-1),te={class:"doc-tablewrapper"},le={class:"doc-table"},ne=Object(n["k"])("thead",null,[Object(n["k"])("tr",null,[Object(n["k"])("th",null,"Name"),Object(n["k"])("th",null,"Type"),Object(n["k"])("th",null,"Default"),Object(n["k"])("th",null,"Description")])],-1),oe=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"modelValue"),Object(n["k"])("td",null,"any"),Object(n["k"])("td",null,"null"),Object(n["k"])("td",null,"Value of the component.")],-1),ae=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"options"),Object(n["k"])("td",null,"array"),Object(n["k"])("td",null,"null"),Object(n["k"])("td",null,"An array of selectitems to display as the available options.")],-1),ce=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"optionLabel"),Object(n["k"])("td",null,"string | function"),Object(n["k"])("td",null,"null"),Object(n["k"])("td",null,"Property name or getter function to use as the label of an option.")],-1),ie=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"optionValue"),Object(n["k"])("td",null,"string | function"),Object(n["k"])("td",null,"null"),Object(n["k"])("td",null,"Property name or getter function to use as the value of an option, defaults to the option itself when not defined.")],-1),re=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"optionDisabled"),Object(n["k"])("td",null,"string | function"),Object(n["k"])("td",null,"null"),Object(n["k"])("td",null,"Property name or getter function to use as the disabled flag of an option, defaults to false when not defined.")],-1),ue=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"optionGroupLabel"),Object(n["k"])("td",null,"string | function"),Object(n["k"])("td",null,"null"),Object(n["k"])("td",null,"Property name or getter function to use as the label of an option group.")],-1),se=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"optionGroupChildren"),Object(n["k"])("td",null,"string | function"),Object(n["k"])("td",null,"null"),Object(n["k"])("td",null,"Property name or getter function that refers to the children options of option group.")],-1),de=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"scrollHeight"),Object(n["k"])("td",null,"string"),Object(n["k"])("td",null,"200px"),Object(n["k"])("td",null,"Height of the viewport, a scrollbar is defined if height of list exceeds this value.")],-1),be=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"filter"),Object(n["k"])("td",null,"boolean"),Object(n["k"])("td",null,"false"),Object(n["k"])("td",null,"When specified, displays a filter input at header.")],-1),pe=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"filterPlaceholder"),Object(n["k"])("td",null,"string"),Object(n["k"])("td",null,"null"),Object(n["k"])("td",null,"Placeholder text to show when filter input is empty.")],-1),Oe=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"filterLocale"),Object(n["k"])("td",null,"string"),Object(n["k"])("td",null,"undefined"),Object(n["k"])("td",null,"Locale to use in filtering. The default locale is the host environment's current locale.")],-1),je=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"filterMatchMode"),Object(n["k"])("td",null,"string"),Object(n["k"])("td",null,"contains"),Object(n["k"])("td",null,'Defines the filtering algorithm to use when searching the options. Valid values are "contains" (default), "startsWith" and "endsWith"')],-1),ke=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"filterFields"),Object(n["k"])("td",null,"array"),Object(n["k"])("td",null,"null"),Object(n["k"])("td",null,"Fields used when filtering the options, defaults to optionLabel.")],-1),he=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"editable"),Object(n["k"])("td",null,"boolean"),Object(n["k"])("td",null,"false"),Object(n["k"])("td",null,"When present, custom value instead of predefined options can be entered using the editable input field.")],-1),me=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"placeholder"),Object(n["k"])("td",null,"string"),Object(n["k"])("td",null,"null"),Object(n["k"])("td",null,"Default text to display when no option is selected.")],-1),fe=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"disabled"),Object(n["k"])("td",null,"boolean"),Object(n["k"])("td",null,"false"),Object(n["k"])("td",null,"When present, it specifies that the component should be disabled.")],-1),ve=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"dataKey"),Object(n["k"])("td",null,"string"),Object(n["k"])("td",null,"null"),Object(n["k"])("td",null,"A property to uniquely identify an option.")],-1),ye=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"showClear"),Object(n["k"])("td",null,"boolean"),Object(n["k"])("td",null,"false"),Object(n["k"])("td",null,"When enabled, a clear icon is displayed to clear the value.")],-1),ge=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"inputId"),Object(n["k"])("td",null,"string"),Object(n["k"])("td",null,"null"),Object(n["k"])("td",null,"Identifier of the underlying input element.")],-1),we=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"inputStyle"),Object(n["k"])("td",null,"any"),Object(n["k"])("td",null,"null"),Object(n["k"])("td",null,"Inline style of the input field.")],-1),Ce=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"inputClass"),Object(n["k"])("td",null,"string"),Object(n["k"])("td",null,"null"),Object(n["k"])("td",null,"Style class of the input field.")],-1),Ie=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"inputProps"),Object(n["k"])("td",null,"object"),Object(n["k"])("td",null,"null"),Object(n["k"])("td",null,"Uses to pass all properties of the HTMLInputElement/HTMLSpanElement to the focusable input element inside the component.")],-1),Le=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"panelStyle"),Object(n["k"])("td",null,"any"),Object(n["k"])("td",null,"null"),Object(n["k"])("td",null,"Inline style of the overlay panel.")],-1),Se=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"panelClass"),Object(n["k"])("td",null,"string"),Object(n["k"])("td",null,"null"),Object(n["k"])("td",null,"Style class of the overlay panel.")],-1),De=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"panelProps"),Object(n["k"])("td",null,"object"),Object(n["k"])("td",null,"null"),Object(n["k"])("td",null,"Uses to pass all properties of the HTMLDivElement to the overlay panel.")],-1),Pe=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"filterInputProps"),Object(n["k"])("td",null,"object"),Object(n["k"])("td",null,"null"),Object(n["k"])("td",null,"Uses to pass all properties of the HTMLInputElement to the filter input inside the overlay panel.")],-1),ze=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"clearIconProps"),Object(n["k"])("td",null,"object"),Object(n["k"])("td",null,"null"),Object(n["k"])("td",null,"Uses to pass all properties of the HTMLElement to the clear icon inside the component.")],-1),Te=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"appendTo"),Object(n["k"])("td",null,"string"),Object(n["k"])("td",null,"body"),Object(n["k"])("td",null,'A valid query selector or an HTMLElement to specify where the overlay gets attached. Special keywords are "body" for document body and "self" for the element itself.')],-1),Fe=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"loading"),Object(n["k"])("td",null,"boolean"),Object(n["k"])("td",null,"false"),Object(n["k"])("td",null,"Whether the dropdown is in loading state.")],-1),Ae=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"loadingIcon"),Object(n["k"])("td",null,"string"),Object(n["k"])("td",null,"pi pi-spinner pi-spin"),Object(n["k"])("td",null,"Icon to display in loading state.")],-1),Me=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"resetFilterOnHide"),Object(n["k"])("td",null,"boolean"),Object(n["k"])("td",null,"false"),Object(n["k"])("td",null,"Clears the filter value when hiding the dropdown.")],-1),Ve=Object(n["k"])("td",null,"virtualScrollerOptions",-1),xe=Object(n["k"])("td",null,"object",-1),Ne=Object(n["k"])("td",null,"null",-1),Ge=Object(n["n"])("Whether to use the virtualScroller feature. The properties of "),Ee=Object(n["n"])("VirtualScroller"),He=Object(n["n"])(" component can be used like an object in it."),Ue=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"autoOptionFocus"),Object(n["k"])("td",null,"boolean"),Object(n["k"])("td",null,"true"),Object(n["k"])("td",null,"Whether to focus on the first visible or selected element when the overlay panel is shown.")],-1),Ye=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"autoFilterFocus"),Object(n["k"])("td",null,"boolean"),Object(n["k"])("td",null,"false"),Object(n["k"])("td",null,"Whether to focus on the filter element when the overlay panel is shown.")],-1),Re=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"selectOnFocus"),Object(n["k"])("td",null,"boolean"),Object(n["k"])("td",null,"false"),Object(n["k"])("td",null,"When enabled, the focused option is selected.")],-1),Be=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"filterMessage"),Object(n["k"])("td",null,"string"),Object(n["k"])("td",null,"{0} results are available"),Object(n["k"])("td",null,"Text to be displayed in hidden accessible field when filtering returns any results. Defaults to value from PrimeVue locale configuration.")],-1),Je=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"selectionMessage"),Object(n["k"])("td",null,"string"),Object(n["k"])("td",null,"{0} items selected"),Object(n["k"])("td",null,"Text to be displayed in hidden accessible field when options are selected. Defaults to value from PrimeVue locale configuration.")],-1),Ke=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"emptySelectionMessage"),Object(n["k"])("td",null,"string"),Object(n["k"])("td",null,"No selected item"),Object(n["k"])("td",null,"Text to be displayed in hidden accessible field when any option is not selected. Defaults to value from PrimeVue locale configuration.")],-1),We=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"emptyFilterMessage"),Object(n["k"])("td",null,"string"),Object(n["k"])("td",null,"No results found"),Object(n["k"])("td",null,"Text to be displayed when filtering does not return any results. Defaults to value from PrimeVue locale configuration.")],-1),_e=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"emptyMessage"),Object(n["k"])("td",null,"string"),Object(n["k"])("td",null,"No results found"),Object(n["k"])("td",null,"Text to be displayed when there are no options available. Defaults to value from PrimeVue locale configuration.")],-1),Ze=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"tabindex"),Object(n["k"])("td",null,"number"),Object(n["k"])("td",null,"0"),Object(n["k"])("td",null,"Index of the element in tabbing order.")],-1),$e=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"aria-label"),Object(n["k"])("td",null,"string"),Object(n["k"])("td",null,"null"),Object(n["k"])("td",null,"Defines a string value that labels an interactive element.")],-1),qe=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"aria-labelledby"),Object(n["k"])("td",null,"string"),Object(n["k"])("td",null,"null"),Object(n["k"])("td",null,"Establishes relationships between the component and label(s) where its value should be one or more element IDs.")],-1),Qe=Object(n["k"])("h5",null,"Events",-1),Xe=Object(n["k"])("div",{class:"doc-tablewrapper"},[Object(n["k"])("table",{class:"doc-table"},[Object(n["k"])("thead",null,[Object(n["k"])("tr",null,[Object(n["k"])("th",null,"Name"),Object(n["k"])("th",null,"Parameters"),Object(n["k"])("th",null,"Description")])]),Object(n["k"])("tbody",null,[Object(n["k"])("tr",null,[Object(n["k"])("td",null,"change"),Object(n["k"])("td",null,[Object(n["n"])(" event.originalEvent: Original event "),Object(n["k"])("br"),Object(n["n"])(" event.value: Selected option value ")]),Object(n["k"])("td",null,"Callback to invoke on value change.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"focus"),Object(n["k"])("td",null,"event"),Object(n["k"])("td",null,"Callback to invoke when the component receives focus.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"blur"),Object(n["k"])("td",null,"event"),Object(n["k"])("td",null,"Callback to invoke when the component loses focus.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"before-show"),Object(n["k"])("td",null,"-"),Object(n["k"])("td",null,"Callback to invoke before the overlay is shown.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"before-hide"),Object(n["k"])("td",null,"-"),Object(n["k"])("td",null,"Callback to invoke before the overlay is hidden.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"show"),Object(n["k"])("td",null,"-"),Object(n["k"])("td",null,"Callback to invoke when the overlay is shown.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"hide"),Object(n["k"])("td",null,"-"),Object(n["k"])("td",null,"Callback to invoke when the overlay is hidden.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"filter"),Object(n["k"])("td",null,[Object(n["n"])(" event.originalEvent: Original event "),Object(n["k"])("br"),Object(n["n"])(" event.value: Filter value ")]),Object(n["k"])("td",null,"Callback to invoke on filter input.")])])])],-1),et=Object(n["k"])("h5",null,"Methods",-1),tt=Object(n["k"])("div",{class:"doc-tablewrapper"},[Object(n["k"])("table",{class:"doc-table"},[Object(n["k"])("thead",null,[Object(n["k"])("tr",null,[Object(n["k"])("th",null,"Name"),Object(n["k"])("th",null,"Parameters"),Object(n["k"])("th",null,"Description")])]),Object(n["k"])("tbody",null,[Object(n["k"])("tr",null,[Object(n["k"])("td",null,"show"),Object(n["k"])("td",null,"isFocus: Decides whether to focus on the component. Default value is false."),Object(n["k"])("td",null,"Shows the overlay.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"hide"),Object(n["k"])("td",null,"isFocus: Decides whether to focus on the component. Default value is false."),Object(n["k"])("td",null,"Hides the overlay.")])])])],-1),lt=Object(n["k"])("h5",null,"Slots",-1),nt=Object(n["k"])("div",{class:"doc-tablewrapper"},[Object(n["k"])("table",{class:"doc-table"},[Object(n["k"])("thead",null,[Object(n["k"])("tr",null,[Object(n["k"])("th",null,"Name"),Object(n["k"])("th",null,"Parameters")])]),Object(n["k"])("tbody",null,[Object(n["k"])("tr",null,[Object(n["k"])("td",null,"value"),Object(n["k"])("td",null,[Object(n["n"])(" value: Value of the component "),Object(n["k"])("br"),Object(n["n"])(" placeholder: Placeholder prop value ")])]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"indicator"),Object(n["k"])("td",null,"-")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"header"),Object(n["k"])("td",null,[Object(n["n"])(" value: Value of the component "),Object(n["k"])("br"),Object(n["n"])(" options: Displayed options ")])]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"footer"),Object(n["k"])("td",null,[Object(n["n"])(" value: Value of the component "),Object(n["k"])("br"),Object(n["n"])(" options: Displayed options ")])]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"option"),Object(n["k"])("td",null,[Object(n["n"])(" option: Option instance "),Object(n["k"])("br"),Object(n["n"])(" index: Index of the option ")])]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"optiongroup"),Object(n["k"])("td",null,[Object(n["n"])(" option: OptionGroup instance "),Object(n["k"])("br"),Object(n["n"])(" index: Index of the option group ")])]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"emptyfilter"),Object(n["k"])("td",null,"-")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"empty"),Object(n["k"])("td",null,"-")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"content"),Object(n["k"])("td",null,[Object(n["n"])(" items: An array of objects to display for virtualscroller"),Object(n["k"])("br"),Object(n["n"])(" styleClass: Style class of the component"),Object(n["k"])("br"),Object(n["n"])(" contentRef: Referance of the content"),Object(n["k"])("br"),Object(n["n"])(" getItemOptions: Options of the items ")])]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"loader"),Object(n["k"])("td",null,"options: Options of the loader items for virtualscroller")])])])],-1),ot=Object(n["k"])("h5",null,"Styling",-1),at=Object(n["n"])("Following is the list of structural style classes, for theming classes visit "),ct=Object(n["n"])("theming"),it=Object(n["n"])(" page."),rt=Object(n["k"])("div",{class:"doc-tablewrapper"},[Object(n["k"])("table",{class:"doc-table"},[Object(n["k"])("thead",null,[Object(n["k"])("tr",null,[Object(n["k"])("th",null,"Name"),Object(n["k"])("th",null,"Element")])]),Object(n["k"])("tbody",null,[Object(n["k"])("tr",null,[Object(n["k"])("td",null,"p-dropdown"),Object(n["k"])("td",null,"Container element.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"p-dropdown-label"),Object(n["k"])("td",null,"Element to display label of selected option.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"p-dropdown-trigger"),Object(n["k"])("td",null,"Icon element.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"p-dropdown-panel"),Object(n["k"])("td",null,"Icon element.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"p-dropdown-items-wrapper"),Object(n["k"])("td",null,"Wrapper element of items list.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"p-dropdown-items"),Object(n["k"])("td",null,"List element of items.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"p-dropdown-item"),Object(n["k"])("td",null,"An item in the list.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"p-dropdown-filter-container"),Object(n["k"])("td",null,"Container of filter input.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"p-dropdown-filter"),Object(n["k"])("td",null,"Filter element.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"p-overlay-open"),Object(n["k"])("td",null,"Container element when overlay is visible.")])])])],-1),ut=Object(n["k"])("h5",null,"Accessibility",-1),st=Object(n["k"])("h6",null,"Screen Reader",-1),dt=Object(n["k"])("p",null,[Object(n["n"])(" Value to describe the component can either be provided with "),Object(n["k"])("i",null,"aria-labelledby"),Object(n["n"])(" or "),Object(n["k"])("i",null,"aria-label"),Object(n["n"])(" props. The dropdown element has a "),Object(n["k"])("i",null,"combobox"),Object(n["n"])(" role in addition to "),Object(n["k"])("i",null,"aria-haspopup"),Object(n["n"])(" and "),Object(n["k"])("i",null,"aria-expanded"),Object(n["n"])(" attributes. If the editable option is enabled "),Object(n["k"])("i",null,"aria-autocomplete"),Object(n["n"])(" is also added. The relation between the combobox and the popup is created with "),Object(n["k"])("i",null,"aria-controls"),Object(n["n"])(" and "),Object(n["k"])("i",null,"aria-activedescendant"),Object(n["n"])(" attribute is used to instruct screen reader which option to read during keyboard navigation within the popup list. ")],-1),bt=Object(n["k"])("p",null,[Object(n["n"])(" The popup list has an id that refers to the "),Object(n["k"])("i",null,"aria-controls"),Object(n["n"])(" attribute of the "),Object(n["k"])("i",null,"combobox"),Object(n["n"])(" element and uses "),Object(n["k"])("i",null,"listbox"),Object(n["n"])(" as the role. Each list item has an "),Object(n["k"])("i",null,"option"),Object(n["n"])(" role, an id to match the "),Object(n["k"])("i",null,"aria-activedescendant"),Object(n["n"])(" of the input element along with "),Object(n["k"])("i",null,"aria-label"),Object(n["n"])(", "),Object(n["k"])("i",null,"aria-selected"),Object(n["n"])(" and "),Object(n["k"])("i",null,"aria-disabled"),Object(n["n"])(" attributes. ")],-1),pt=Object(n["k"])("p",null,[Object(n["n"])("If filtering is enabled, "),Object(n["k"])("i",null,"filterInputProps"),Object(n["n"])(" can be defined to give "),Object(n["k"])("i",null,"aria-*"),Object(n["n"])(" props to the filter input element.")],-1),Ot=Object(n["k"])("code",null,'\n<span id="dd1">Options</span>\n<Dropdown aria-labelledby="dd1" />\n\n<Dropdown aria-label="Options" />\n\n',-1),jt=[Ot],kt=Object(n["k"])("h6",null,"Closed State Keyboard Support",-1),ht=Object(n["k"])("div",{class:"doc-tablewrapper"},[Object(n["k"])("table",{class:"doc-table"},[Object(n["k"])("thead",null,[Object(n["k"])("tr",null,[Object(n["k"])("th",null,"Key"),Object(n["k"])("th",null,"Function")])]),Object(n["k"])("tbody",null,[Object(n["k"])("tr",null,[Object(n["k"])("td",null,[Object(n["k"])("i",null,"tab")]),Object(n["k"])("td",null,"Moves focus to the dropdown element.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,[Object(n["k"])("i",null,"space")]),Object(n["k"])("td",null,"Opens the popup and moves visual focus to the selected option, if there is none then first option receives the focus.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,[Object(n["k"])("i",null,"enter")]),Object(n["k"])("td",null,"Opens the popup and moves visual focus to the selected option, if there is none then first option receives the focus.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,[Object(n["k"])("i",null,"down arrow")]),Object(n["k"])("td",null,"Opens the popup and moves visual focus to the selected option, if there is none then first option receives the focus.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,[Object(n["k"])("i",null,"up arrow")]),Object(n["k"])("td",null,"Opens the popup and moves visual focus to the selected option, if there is none then last option receives the focus.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,[Object(n["k"])("i",null,"any printable character")]),Object(n["k"])("td",null,"Opens the popup and moves focus to the option whose label starts with the characters being typed, if there is none and dropdown is not editable then first option receives the focus.")])])])],-1),mt=Object(n["k"])("h6",null,"Popup Keyboard Support",-1),ft=Object(n["k"])("div",{class:"doc-tablewrapper"},[Object(n["k"])("table",{class:"doc-table"},[Object(n["k"])("thead",null,[Object(n["k"])("tr",null,[Object(n["k"])("th",null,"Key"),Object(n["k"])("th",null,"Function")])]),Object(n["k"])("tbody",null,[Object(n["k"])("tr",null,[Object(n["k"])("td",null,[Object(n["k"])("i",null,"tab")]),Object(n["k"])("td",null,"Moves focus to the next focusable element in the popup. If there is none, the focusable option is selected and the overlay is closed then moves focus to next element in page.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,[Object(n["k"])("i",null,"shift"),Object(n["n"])(" + "),Object(n["k"])("i",null,"tab")]),Object(n["k"])("td",null,"Moves focus to the previous focusable element in the popup. If there is none, the focusable option is selected and the overlay is closed then moves focus to next element in page.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,[Object(n["k"])("i",null,"enter")]),Object(n["k"])("td",null,"Selects the focused option and closes the popup, then moves focus to the dropdown element.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,[Object(n["k"])("i",null,"space")]),Object(n["k"])("td",null,"Selects the focused option and closes the popup, then moves focus to the dropdown element.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,[Object(n["k"])("i",null,"escape")]),Object(n["k"])("td",null,"Closes the popup, then moves focus to the dropdown element.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,[Object(n["k"])("i",null,"down arrow")]),Object(n["k"])("td",null,"Moves focus to the next option, if there is none then visual focus does not change.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,[Object(n["k"])("i",null,"up arrow")]),Object(n["k"])("td",null,"Moves focus to the previous option, if there is none then visual focus does not change.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,[Object(n["k"])("i",null,"alt"),Object(n["n"])(" + "),Object(n["k"])("i",null,"up arrow")]),Object(n["k"])("td",null,"Selects the focused option and closes the popup, then moves focus to the dropdown element.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,[Object(n["k"])("i",null,"left arrow")]),Object(n["k"])("td",null,"If the dropdown is editable, removes the visual focus from the current option and moves input cursor to one character left.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,[Object(n["k"])("i",null,"right arrow")]),Object(n["k"])("td",null,"If the dropdown is editable, removes the visual focus from the current option and moves input cursor to one character right.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,[Object(n["k"])("i",null,"home")]),Object(n["k"])("td",null,"If the dropdown is editable, moves input cursor at the end, if not then moves focus to the first option.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,[Object(n["k"])("i",null,"end")]),Object(n["k"])("td",null,"If the dropdown is editable, moves input cursor at the beginning, if not then moves focus to the last option.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,[Object(n["k"])("i",null,"pageUp")]),Object(n["k"])("td",null,"Jumps visual focus to first option.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,[Object(n["k"])("i",null,"pageDown")]),Object(n["k"])("td",null,"Jumps visual focus to last option.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,[Object(n["k"])("i",null,"any printable character")]),Object(n["k"])("td",null,"Moves focus to the option whose label starts with the characters being typed if dropdown is not editable.")])])])],-1),vt=Object(n["k"])("h6",null,"Filter Input Keyboard Support",-1),yt=Object(n["k"])("div",{class:"doc-tablewrapper"},[Object(n["k"])("table",{class:"doc-table"},[Object(n["k"])("thead",null,[Object(n["k"])("tr",null,[Object(n["k"])("th",null,"Key"),Object(n["k"])("th",null,"Function")])]),Object(n["k"])("tbody",null,[Object(n["k"])("tr",null,[Object(n["k"])("td",null,[Object(n["k"])("i",null,"down arrow")]),Object(n["k"])("td",null,"Moves focus to the next option, if there is none then visual focus does not change.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,[Object(n["k"])("i",null,"up arrow")]),Object(n["k"])("td",null,"Moves focus to the previous option, if there is none then visual focus does not change.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,[Object(n["k"])("i",null,"left arrow")]),Object(n["k"])("td",null,"Removes the visual focus from the current option and moves input cursor to one character left.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,[Object(n["k"])("i",null,"right arrow")]),Object(n["k"])("td",null,"Removes the visual focus from the current option and moves input cursor to one character right.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,[Object(n["k"])("i",null,"home")]),Object(n["k"])("td",null,"Moves input cursor at the end, if not then moves focus to the first option.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,[Object(n["k"])("i",null,"end")]),Object(n["k"])("td",null,"Moves input cursor at the beginning, if not then moves focus to the last option.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,[Object(n["k"])("i",null,"enter")]),Object(n["k"])("td",null,"Closes the popup and moves focus to the dropdown element.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,[Object(n["k"])("i",null,"escape")]),Object(n["k"])("td",null,"Closes the popup and moves focus to the dropdown element.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,[Object(n["k"])("i",null,"tab")]),Object(n["k"])("td",null,"Moves focus to the next focusable element in the popup. If there is none, the focusable option is selected and the overlay is closed then moves focus to next element in page.")])])])],-1),gt=Object(n["k"])("h5",null,"Dependencies",-1),wt=Object(n["k"])("p",null,"None.",-1);function Ct(e,t,l,o,a,c){var i=Object(n["P"])("router-link"),r=Object(n["P"])("AppDoc"),u=Object(n["Q"])("code");return Object(n["H"])(),Object(n["h"])(r,{name:"DropdownDemo",sources:a.sources,github:"dropdown/DropdownDemo.vue"},{default:Object(n["Z"])((function(){return[I,Object(n["ab"])((Object(n["H"])(),Object(n["j"])("pre",null,S)),[[u,void 0,void 0,{script:!0}]]),D,Object(n["ab"])((Object(n["H"])(),Object(n["j"])("pre",null,z)),[[u]]),T,F,Object(n["ab"])((Object(n["H"])(),Object(n["j"])("pre",null,M)),[[u]]),Object(n["ab"])((Object(n["H"])(),Object(n["j"])("pre",null,x)),[[u,void 0,void 0,{script:!0}]]),N,G,E,H,Object(n["ab"])((Object(n["H"])(),Object(n["j"])("pre",null,Y)),[[u,void 0,void 0,{script:!0}]]),Object(n["ab"])((Object(n["H"])(),Object(n["j"])("pre",null,B)),[[u]]),J,K,Object(n["ab"])((Object(n["H"])(),Object(n["j"])("pre",null,_)),[[u]]),Z,$,Object(n["ab"])((Object(n["H"])(),Object(n["j"])("pre",null,Q)),[[u]]),X,ee,Object(n["k"])("div",te,[Object(n["k"])("table",le,[ne,Object(n["k"])("tbody",null,[oe,ae,ce,ie,re,ue,se,de,be,pe,Oe,je,ke,he,me,fe,ve,ye,ge,we,Ce,Ie,Le,Se,De,Pe,ze,Te,Fe,Ae,Me,Object(n["k"])("tr",null,[Ve,xe,Ne,Object(n["k"])("td",null,[Ge,Object(n["o"])(i,{to:"/virtualscroller"},{default:Object(n["Z"])((function(){return[Ee]})),_:1}),He])]),Ue,Ye,Re,Be,Je,Ke,We,_e,Ze,$e,qe])])]),Qe,Xe,et,tt,lt,nt,ot,Object(n["k"])("p",null,[at,Object(n["o"])(i,{to:"/theming"},{default:Object(n["Z"])((function(){return[ct]})),_:1}),it]),rt,ut,st,dt,bt,pt,Object(n["ab"])((Object(n["H"])(),Object(n["j"])("pre",null,jt)),[[u]]),kt,ht,mt,ft,vt,yt,gt,wt]})),_:1},8,["sources"])}var It={data:function(){return{sources:{"options-api":{tabName:"Options API Source",content:"\n<template>\n    <div>\n        <h5>Basic</h5>\n        <Dropdown v-model=\"selectedCity1\" :options=\"cities\" optionLabel=\"name\" optionValue=\"code\" placeholder=\"Select a City\" />\n\n        <h5>Editable</h5>\n        <Dropdown v-model=\"selectedCity2\" :options=\"cities\" optionLabel=\"name\" :editable=\"true\"/>\n\n        <h5>Grouped</h5>\n        <Dropdown v-model=\"selectedGroupedCity\" :options=\"groupedCities\" optionLabel=\"label\" optionGroupLabel=\"label\" optionGroupChildren=\"items\">\n            <template #optiongroup=\"slotProps\">\n                <div class=\"flex align-items-center country-item\">\n                    <img src=\"https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png\" width=\"18\" />\n                    <div>{{slotProps.option.label}}</div>\n                </div>\n            </template>\n        </Dropdown>\n\n        <h5>Advanced with Templating, Filtering and Clear Icon</h5>\n        <Dropdown v-model=\"selectedCountry\" :options=\"countries\" optionLabel=\"name\" :filter=\"true\" placeholder=\"Select a Country\" :showClear=\"true\">\n            <template #value=\"slotProps\">\n                <div class=\"country-item country-item-value\" v-if=\"slotProps.value\">\n                    <img src=\"https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png\" />\n                    <div>{{slotProps.value.name}}</div>\n                </div>\n                <span v-else>\n                    {{slotProps.placeholder}}\n                </span>\n            </template>\n            <template #option=\"slotProps\">\n                <div class=\"country-item\">\n                    <img src=\"https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png\" />\n                    <div>{{slotProps.option.name}}</div>\n                </div>\n            </template>\n        </Dropdown>\n\n        <h5>Loading State</h5>\n        <Dropdown placeholder=\"Loading...\" loading></Dropdown>\n\n        <h5>Virtual Scroll (1000 Items)</h5>\n        <Dropdown v-model=\"selectedItem1\" :options=\"items\" optionLabel=\"label\" optionValue=\"value\" :virtualScrollerOptions=\"{ itemSize: 38 }\" placeholder=\"Select Item\"></Dropdown>\n\n        <h5>Virtual Scroll (1000 Items) and Lazy</h5>\n        <Dropdown v-model=\"selectedItem2\" :options=\"lazyItems\" optionLabel=\"label\" optionValue=\"value\" :virtualScrollerOptions=\"{ lazy: true, onLazyLoad: onLazyLoad, itemSize: 38, showLoader: true, loading: loading, delay: 250 }\" placeholder=\"Select Item\">\n            <template v-slot:loader=\"{ options }\">\n                <div class=\"flex align-items-center p-2\" style=\"height: 38px\" >\n                    <Skeleton :width=\"options.even ? '60%' : '50%'\" height=\"1rem\" />\n                </div>\n            </template>\n        </Dropdown>\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            selectedCity1: null,\n            selectedCity2: null,\n            selectedCountry: null,\n            selectedGroupedCity: null,\n            selectedItem1: null,\n            selectedItem2: null,\n            loading: false,\n            cities: [\n                {name: 'New York', code: 'NY'},\n                {name: 'Rome', code: 'RM'},\n                {name: 'London', code: 'LDN'},\n                {name: 'Istanbul', code: 'IST'},\n                {name: 'Paris', code: 'PRS'}\n            ],\n            countries: [\n                {name: 'Australia', code: 'AU'},\n                {name: 'Brazil', code: 'BR'},\n                {name: 'China', code: 'CN'},\n                {name: 'Egypt', code: 'EG'},\n                {name: 'France', code: 'FR'},\n                {name: 'Germany', code: 'DE'},\n                {name: 'India', code: 'IN'},\n                {name: 'Japan', code: 'JP'},\n                {name: 'Spain', code: 'ES'},\n                {name: 'United States', code: 'US'}\n            ],\n            groupedCities: [{\n                label: 'Germany', code: 'DE',\n                items: [\n                    {label: 'Berlin', value: 'Berlin'},\n                    {label: 'Frankfurt', value: 'Frankfurt'},\n                    {label: 'Hamburg', value: 'Hamburg'},\n                    {label: 'Munich', value: 'Munich'}\n                ]\n            },\n            {\n                label: 'USA', code: 'US',\n                items: [\n                    {label: 'Chicago', value: 'Chicago'},\n                    {label: 'Los Angeles', value: 'Los Angeles'},\n                    {label: 'New York', value: 'New York'},\n                    {label: 'San Francisco', value: 'San Francisco'}\n                ]\n            },\n            {\n                label: 'Japan', code: 'JP',\n                items: [\n                    {label: 'Kyoto', value: 'Kyoto'},\n                    {label: 'Osaka', value: 'Osaka'},\n                    {label: 'Tokyo', value: 'Tokyo'},\n                    {label: 'Yokohama', value: 'Yokohama'}\n                ]\n            }],\n            items: Array.from({ length: 100000 }, (_, i) => ({ label: `Item #${i}`, value: i })),\n            lazyItems: Array.from({ length: 100000 })\n        }\n    },\n    loadLazyTimeout: null,\n    methods: {\n        onLazyLoad(event) {\n            this.loading = true;\n\n            if (this.loadLazyTimeout) {\n                clearTimeout(this.loadLazyTimeout);\n            }\n\n            //imitate delay of a backend call\n            this.loadLazyTimeout = setTimeout(() => {\n                const { first, last } = event;\n                const lazyItems = [...this.lazyItems];\n\n                for (let i = first; i < last; i++) {\n                    lazyItems[i] = { label: `Item #${i}`, value: i };\n                }\n\n                this.lazyItems = lazyItems;\n                this.loading = false;\n            }, Math.random() * 1000 + 250);\n        }\n    },\n}\n<\\/script>\n\n<style lang=\"scss\" scoped>\n.p-dropdown {\n    width: 14rem;\n}\n\n.country-item {\n    img {\n        width: 17px;\n        margin-right: 0.5rem;\n    }\n}\n</style>"},"composition-api":{tabName:"Composition API Source",content:"\n<template>\n    <div>\n        <h5>Basic</h5>\n        <Dropdown v-model=\"selectedCity1\" :options=\"cities\" optionLabel=\"name\" optionValue=\"code\" placeholder=\"Select a City\" />\n\n        <h5>Editable</h5>\n        <Dropdown v-model=\"selectedCity2\" :options=\"cities\" optionLabel=\"name\" :editable=\"true\"/>\n\n        <h5>Grouped</h5>\n        <Dropdown v-model=\"selectedGroupedCity\" :options=\"groupedCities\" optionLabel=\"label\" optionGroupLabel=\"label\" optionGroupChildren=\"items\">\n            <template #optiongroup=\"slotProps\">\n                <div class=\"flex align-items-center country-item\">\n                    <img src=\"https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png\" width=\"18\" />\n                    <div>{{slotProps.option.label}}</div>\n                </div>\n            </template>\n        </Dropdown>\n\n        <h5>Advanced with Templating, Filtering and Clear Icon</h5>\n        <Dropdown v-model=\"selectedCountry\" :options=\"countries\" optionLabel=\"name\" :filter=\"true\" placeholder=\"Select a Country\" :showClear=\"true\">\n            <template #value=\"slotProps\">\n                <div class=\"country-item country-item-value\" v-if=\"slotProps.value\">\n                    <img src=\"https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png\" />\n                    <div>{{slotProps.value.name}}</div>\n                </div>\n                <span v-else>\n                    {{slotProps.placeholder}}\n                </span>\n            </template>\n            <template #option=\"slotProps\">\n                <div class=\"country-item\">\n                    <img src=\"https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png\" />\n                    <div>{{slotProps.option.name}}</div>\n                </div>\n            </template>\n        </Dropdown>\n\n        <h5>Loading State</h5>\n        <Dropdown placeholder=\"Loading...\" loading></Dropdown>\n\n        <h5>Virtual Scroll (1000 Items)</h5>\n        <Dropdown v-model=\"selectedItem1\" :options=\"items\" optionLabel=\"label\" optionValue=\"value\" :virtualScrollerOptions=\"{ itemSize: 38 }\" placeholder=\"Select Item\"></Dropdown>\n\n        <h5>Virtual Scroll (1000 Items) and Lazy</h5>\n        <Dropdown v-model=\"selectedItem2\" :options=\"lazyItems\" optionLabel=\"label\" optionValue=\"value\" :virtualScrollerOptions=\"{ lazy: true, onLazyLoad: onLazyLoad, itemSize: 38, showLoader: true, loading: loading, delay: 250 }\" placeholder=\"Select Item\">\n            <template v-slot:loader=\"{ options }\">\n                <div class=\"flex align-items-center p-2\" style=\"height: 38px\" >\n                    <Skeleton :width=\"options.even ? '60%' : '50%'\" height=\"1rem\" />\n                </div>\n            </template>\n        </Dropdown>\n    </div>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n    setup() {\n        const selectedCity1 = ref();\n        const selectedCity2 = ref();\n        const selectedCountry = ref();\n        const selectedGroupedCity = ref();\n        const selectedItem1 = ref();\n        const selectedItem2 = ref();\n        const loading = ref(false);\n        const cities = ref([\n            {name: 'New York', code: 'NY'},\n            {name: 'Rome', code: 'RM'},\n            {name: 'London', code: 'LDN'},\n            {name: 'Istanbul', code: 'IST'},\n            {name: 'Paris', code: 'PRS'}\n        ]);\n        const countries = ref([\n            {name: 'Australia', code: 'AU'},\n            {name: 'Brazil', code: 'BR'},\n            {name: 'China', code: 'CN'},\n            {name: 'Egypt', code: 'EG'},\n            {name: 'France', code: 'FR'},\n            {name: 'Germany', code: 'DE'},\n            {name: 'India', code: 'IN'},\n            {name: 'Japan', code: 'JP'},\n            {name: 'Spain', code: 'ES'},\n            {name: 'United States', code: 'US'}\n        ]);\n        const groupedCities = ref([\n            {\n                label: 'Germany', code: 'DE',\n                items: [\n                    {label: 'Berlin', value: 'Berlin'},\n                    {label: 'Frankfurt', value: 'Frankfurt'},\n                    {label: 'Hamburg', value: 'Hamburg'},\n                    {label: 'Munich', value: 'Munich'}\n                ]\n            },\n            {\n                label: 'USA', code: 'US',\n                items: [\n                    {label: 'Chicago', value: 'Chicago'},\n                    {label: 'Los Angeles', value: 'Los Angeles'},\n                    {label: 'New York', value: 'New York'},\n                    {label: 'San Francisco', value: 'San Francisco'}\n                ]\n            },\n            {\n                label: 'Japan', code: 'JP',\n                items: [\n                    {label: 'Kyoto', value: 'Kyoto'},\n                    {label: 'Osaka', value: 'Osaka'},\n                    {label: 'Tokyo', value: 'Tokyo'},\n                    {label: 'Yokohama', value: 'Yokohama'}\n                ]\n            }\n        ]);\n\n        const items = ref(Array.from({ length: 100000 }, (_, i) => ({ label: `Item #${i}`, value: i })));\n        const lazyItems = ref(Array.from({ length: 100000 }));\n\n        return { selectedCity1, selectedCity2, selectedCountry, selectedGroupedCity, cities, countries, groupedCities, selectedItem1, selectedItem2, loading, items, lazyItems}\n    },\n    loadLazyTimeout: null,\n    methods: {\n        onLazyLoad(event) {\n            this.loading = true;\n\n            if (this.loadLazyTimeout) {\n                clearTimeout(this.loadLazyTimeout);\n            }\n\n            //imitate delay of a backend call\n            this.loadLazyTimeout = setTimeout(() => {\n                const { first, last } = event;\n                const lazyItems = [...this.lazyItems];\n\n                for (let i = first; i < last; i++) {\n                    lazyItems[i] = { label: `Item #${i}`, value: i };\n                }\n\n                this.lazyItems = lazyItems;\n                this.loading = false;\n            }, Math.random() * 1000 + 250);\n        }\n    }\n}\n<\\/script>\n\n<style lang=\"scss\" scoped>\n.p-dropdown {\n    width: 14rem;\n}\n\n.country-item {\n    img {\n        width: 17px;\n        margin-right: 0.5rem;\n    }\n}\n</style>"},"browser-source":{tabName:"Browser Source",imports:'<script src="https://unpkg.com/primevue@^3/skeleton/skeleton.min.js"><\\/script>',content:"<div id=\"app\">\n            <h5>Basic</h5>\n            <p-dropdown v-model=\"selectedCity1\" :options=\"cities\" option-label=\"name\" option-value=\"code\" placeholder=\"Select a City\"></p-dropdown>\n\n            <h5>Editable</h5>\n            <p-dropdown v-model=\"selectedCity2\" :options=\"cities\" option-label=\"name\" :editable=\"true\"></p-dropdown>\n\n            <h5>Grouped</h5>\n            <p-dropdown v-model=\"selectedGroupedCity\" :options=\"groupedCities\" option-label=\"label\" option-group-label=\"label\" option-group-children=\"items\">\n                <template #optiongroup=\"slotProps\">\n                    <div class=\"flex align-items-center country-item\">\n                        <img src=\"https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png\" width=\"18\" />\n                        <div>{{slotProps.option.label}}</div>\n                    </div>\n                </template>\n            </p-dropdown>\n\n            <h5>Advanced with Templating, Filtering and Clear Icon</h5>\n            <p-dropdown v-model=\"selectedCountry\" :options=\"countries\" option-label=\"name\" :filter=\"true\" placeholder=\"Select a Country\" :show-clear=\"true\">\n                <template #value=\"slotProps\">\n                    <div class=\"country-item country-item-value\" v-if=\"slotProps.value\">\n                        <img src=\"https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png\" />\n                        <div>{{slotProps.value.name}}</div>\n                    </div>\n                    <span v-else>\n                        {{slotProps.placeholder}}\n                    </span>\n                </template>\n                <template #option=\"slotProps\">\n                    <div class=\"country-item\">\n                        <img src=\"https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png\" />\n                        <div>{{slotProps.option.name}}</div>\n                    </div>\n                </template>\n            </p-dropdown>\n\n            <h5>Loading State</h5>\n            <p-dropdown placeholder=\"Loading...\" loading></p-dropdown>\n\n            <h5>Virtual Scroll (1000 Items)</h5>\n            <p-dropdown v-model=\"selectedItem1\" :options=\"items\" option-label=\"label\" option-value=\"value\" :virtual-scroller-options=\"{ itemSize: 38 }\" placeholder=\"Select Item\"></p-dropdown>\n\n            <h5>Virtual Scroll (1000 Items) and Lazy</h5>\n            <p-dropdown v-model=\"selectedItem2\" :options=\"lazyItems\" option-label=\"label\" option-value=\"value\" :virtual-scroller-options=\"{ lazy: true, onLazyLoad: onLazyLoad, itemSize: 38, showLoader: true, loading: loading, delay: 250 }\" placeholder=\"Select Item\">\n                <template v-slot:loader=\"{ options }\">\n                    <div class=\"flex align-items-center p-2\" style=\"height: 38px\" >\n                        <p-skeleton :width=\"options.even ? '60%' : '50%'\" height=\"1rem\"></p-skeleton>\n                    </div>\n                </template>\n            </p-dropdown>\n        </div>\n\n        <script type=\"module\">\n        const { createApp, ref } = Vue;\n\n        const App = {\n            setup() {\n                const selectedCity1 = ref();\n                const selectedCity2 = ref();\n                const selectedCountry = ref();\n                const selectedGroupedCity = ref();\n                const selectedItem1 = ref();\n                const selectedItem2 = ref();\n                const loading = ref(false);\n                const cities = ref([\n                    {name: 'New York', code: 'NY'},\n                    {name: 'Rome', code: 'RM'},\n                    {name: 'London', code: 'LDN'},\n                    {name: 'Istanbul', code: 'IST'},\n                    {name: 'Paris', code: 'PRS'}\n                ]);\n                const countries = ref([\n                    {name: 'Australia', code: 'AU'},\n                    {name: 'Brazil', code: 'BR'},\n                    {name: 'China', code: 'CN'},\n                    {name: 'Egypt', code: 'EG'},\n                    {name: 'France', code: 'FR'},\n                    {name: 'Germany', code: 'DE'},\n                    {name: 'India', code: 'IN'},\n                    {name: 'Japan', code: 'JP'},\n                    {name: 'Spain', code: 'ES'},\n                    {name: 'United States', code: 'US'}\n                ]);\n                const groupedCities = ref([\n                    {\n                        label: 'Germany', code: 'DE',\n                        items: [\n                            {label: 'Berlin', value: 'Berlin'},\n                            {label: 'Frankfurt', value: 'Frankfurt'},\n                            {label: 'Hamburg', value: 'Hamburg'},\n                            {label: 'Munich', value: 'Munich'}\n                        ]\n                    },\n                    {\n                        label: 'USA', code: 'US',\n                        items: [\n                            {label: 'Chicago', value: 'Chicago'},\n                            {label: 'Los Angeles', value: 'Los Angeles'},\n                            {label: 'New York', value: 'New York'},\n                            {label: 'San Francisco', value: 'San Francisco'}\n                        ]\n                    },\n                    {\n                        label: 'Japan', code: 'JP',\n                        items: [\n                            {label: 'Kyoto', value: 'Kyoto'},\n                            {label: 'Osaka', value: 'Osaka'},\n                            {label: 'Tokyo', value: 'Tokyo'},\n                            {label: 'Yokohama', value: 'Yokohama'}\n                        ]\n                    }\n                ]);\n\n                const items = ref(Array.from({ length: 100000 }, (_, i) => ({ label: `Item #${i}`, value: i })));\n                const lazyItems = ref(Array.from({ length: 100000 }));\n\n                return { selectedCity1, selectedCity2, selectedCountry, selectedGroupedCity, cities, countries, groupedCities, selectedItem1, selectedItem2, loading, items, lazyItems}\n            },\n            loadLazyTimeout: null,\n            methods: {\n                onLazyLoad(event) {\n                    this.loading = true;\n\n                    if (this.loadLazyTimeout) {\n                        clearTimeout(this.loadLazyTimeout);\n                    }\n\n                    //imitate delay of a backend call\n                    this.loadLazyTimeout = setTimeout(() => {\n                        const { first, last } = event;\n                        const lazyItems = [...this.lazyItems];\n\n                        for (let i = first; i < last; i++) {\n                            lazyItems[i] = { label: `Item #${i}`, value: i };\n                        }\n\n                        this.lazyItems = lazyItems;\n                        this.loading = false;\n                    }, Math.random() * 1000 + 250);\n                }\n            },\n            components: {\n                \"p-dropdown\": primevue.dropdown,\n                \"p-skeleton\": primevue.skeleton\n            }\n        };\n\n        createApp(App)\n            .use(primevue.config.default)\n            .mount(\"#app\");\n        <\\/script>\n\n        <style>\n        .p-dropdown {\n            width: 14rem;\n        }\n\n        .country-item img{\n            width: 17px;\n            margin-right: 0.5rem;\n        }\n        </style>"}}}}},Lt=l("6b0d"),St=l.n(Lt);const Dt=St()(It,[["render",Ct]]);var Pt=Dt,zt={data:function(){return{selectedCity1:null,selectedCity2:null,selectedCountry:null,selectedGroupedCity:null,selectedItem1:null,selectedItem2:null,loading:!1,cities:[{name:"New York",code:"NY"},{name:"Rome",code:"RM"},{name:"London",code:"LDN"},{name:"Istanbul",code:"IST"},{name:"Paris",code:"PRS"}],countries:[{name:"Australia",code:"AU"},{name:"Brazil",code:"BR"},{name:"China",code:"CN"},{name:"Egypt",code:"EG"},{name:"France",code:"FR"},{name:"Germany",code:"DE"},{name:"India",code:"IN"},{name:"Japan",code:"JP"},{name:"Spain",code:"ES"},{name:"United States",code:"US"}],groupedCities:[{label:"Germany",code:"DE",items:[{label:"Berlin",value:"Berlin"},{label:"Frankfurt",value:"Frankfurt"},{label:"Hamburg",value:"Hamburg"},{label:"Munich",value:"Munich"}]},{label:"USA",code:"US",items:[{label:"Chicago",value:"Chicago"},{label:"Los Angeles",value:"Los Angeles"},{label:"New York",value:"New York"},{label:"San Francisco",value:"San Francisco"}]},{label:"Japan",code:"JP",items:[{label:"Kyoto",value:"Kyoto"},{label:"Osaka",value:"Osaka"},{label:"Tokyo",value:"Tokyo"},{label:"Yokohama",value:"Yokohama"}]}],items:Array.from({length:1e5},(function(e,t){return{label:"Item #".concat(t),value:t}})),lazyItems:Array.from({length:1e5})}},loadLazyTimeout:null,methods:{onLazyLoad:function(e){var t=this;this.loading=!0,this.loadLazyTimeout&&clearTimeout(this.loadLazyTimeout),this.loadLazyTimeout=setTimeout((function(){for(var l=e.first,n=e.last,o=Object(C["a"])(t.lazyItems),a=l;a<n;a++)o[a]={label:"Item #".concat(a),value:a};t.lazyItems=o,t.loading=!1}),1e3*Math.random()+250)}},components:{DropdownDoc:Pt}};l("7aba");const Tt=St()(zt,[["render",w],["__scopeId","data-v-b83aa88c"]]);t["default"]=Tt},"7aba":function(e,t,l){"use strict";l("cc53")},cc53:function(e,t,l){var n=l("10a8");n.__esModule&&(n=n.default),"string"===typeof n&&(n=[[e.i,n,""]]),n.locals&&(e.exports=n.locals);var o=l("499e").default;o("0ac4004f",n,!0,{sourceMap:!1,shadowMode:!1})}}]);