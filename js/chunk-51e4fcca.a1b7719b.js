(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-51e4fcca"],{"8a76":function(e,t,l){"use strict";l.r(t);l("b0c0");var n=l("7a23"),c=l("2d77"),o=l.n(c),a=function(e){return Object(n["K"])("data-v-4b3a85a8"),e=e(),Object(n["I"])(),e},i={class:"content-section introduction"},u=a((function(){return Object(n["k"])("div",{class:"feature-intro"},[Object(n["k"])("h1",null,"MultiSelect"),Object(n["k"])("p",null,"MultiSelect is used to multiple values from a list of options.")],-1)})),s={class:"content-section implementation"},r={class:"card"},b=a((function(){return Object(n["k"])("h5",null,"Basic",-1)})),d=a((function(){return Object(n["k"])("h5",null,"Chips",-1)})),p=a((function(){return Object(n["k"])("h5",null,"Grouped",-1)})),O={class:"flex align-items-center country-item"},j=a((function(){return Object(n["k"])("h5",null,"Advanced with Templating and Filtering",-1)})),k=Object(n["n"])(" Select Countries "),h={class:"country-item"},m=a((function(){return Object(n["k"])("h5",null,"Loading State",-1)})),v=a((function(){return Object(n["k"])("h5",null,"Virtual Scroll (1000 Items)",-1)}));function f(e,t,l,c,a,f){var g=Object(n["P"])("AppDemoActions"),y=Object(n["P"])("MultiSelect"),w=Object(n["P"])("MultiSelectDoc");return Object(n["H"])(),Object(n["j"])("div",null,[Object(n["k"])("div",i,[u,Object(n["o"])(g)]),Object(n["k"])("div",s,[Object(n["k"])("div",r,[b,Object(n["o"])(y,{modelValue:a.selectedCities1,"onUpdate:modelValue":t[0]||(t[0]=function(e){return a.selectedCities1=e}),options:a.cities,optionLabel:"name",placeholder:"Select Cities"},null,8,["modelValue","options"]),d,Object(n["o"])(y,{modelValue:a.selectedCities2,"onUpdate:modelValue":t[1]||(t[1]=function(e){return a.selectedCities2=e}),options:a.cities,optionLabel:"name",placeholder:"Select Cities",display:"chip"},null,8,["modelValue","options"]),p,Object(n["o"])(y,{modelValue:a.selectedGroupedCities,"onUpdate:modelValue":t[2]||(t[2]=function(e){return a.selectedGroupedCities=e}),options:a.groupedCities,optionLabel:"label",optionGroupLabel:"label",optionGroupChildren:"items",placeholder:"Select Cities"},{optiongroup:Object(n["Z"])((function(e){return[Object(n["k"])("div",O,[Object(n["k"])("img",{src:o.a,class:Object(n["A"])("flag flag-"+e.option.code.toLowerCase()),width:"18"},null,2),Object(n["k"])("div",null,Object(n["T"])(e.option.label),1)])]})),_:1},8,["modelValue","options"]),j,Object(n["o"])(y,{modelValue:a.selectedCountries,"onUpdate:modelValue":t[3]||(t[3]=function(e){return a.selectedCountries=e}),options:a.countries,optionLabel:"name",placeholder:"Select Countries",filter:!0,class:"multiselect-custom"},{value:Object(n["Z"])((function(e){return[(Object(n["H"])(!0),Object(n["j"])(n["a"],null,Object(n["N"])(e.value,(function(e){return Object(n["H"])(),Object(n["j"])("div",{key:e.code,class:"country-item country-item-value"},[Object(n["k"])("img",{src:o.a,class:Object(n["A"])("flag flag-"+e.code.toLowerCase())},null,2),Object(n["k"])("div",null,Object(n["T"])(e.name),1)])})),128)),e.value&&0!==e.value.length?Object(n["i"])("",!0):(Object(n["H"])(),Object(n["j"])(n["a"],{key:0},[k],64))]})),option:Object(n["Z"])((function(e){return[Object(n["k"])("div",h,[Object(n["k"])("img",{src:o.a,class:Object(n["A"])("flag flag-"+e.option.code.toLowerCase())},null,2),Object(n["k"])("div",null,Object(n["T"])(e.option.name),1)])]})),_:1},8,["modelValue","options"]),m,Object(n["o"])(y,{placeholder:"Loading...",loading:""}),v,Object(n["o"])(y,{modelValue:a.selectedItems,"onUpdate:modelValue":t[4]||(t[4]=function(e){return a.selectedItems=e}),options:a.items,maxSelectedLabels:3,selectAll:a.selectAll,onSelectallChange:t[5]||(t[5]=function(e){return f.onSelectAllChange(e)}),onChange:t[6]||(t[6]=function(e){return f.onChange(e)}),optionLabel:"label",optionValue:"value",virtualScrollerOptions:{itemSize:44},placeholder:"Select Item"},null,8,["modelValue","options","selectAll"])])]),Object(n["o"])(w)])}l("a630"),l("3ca3"),l("d81d");var g=Object(n["k"])("h5",null,"Import via Module",-1),y=Object(n["k"])("code",null,"\nimport MultiSelect from 'primevue/multiselect';\n\n",-1),w=[y],C=Object(n["k"])("h5",null,"Import via CDN",-1),S=Object(n["k"])("code",null,'\n<script src="https://unpkg.com/primevue@^3/core/core.min.js"><\/script>\n<script src="https://unpkg.com/primevue@^3/multiselect/multiselect.min.js"><\/script>\n\n',-1),A=[S],M=Object(n["k"])("h5",null,"Getting Started",-1),P=Object(n["k"])("p",null,[Object(n["n"])("MultiSelect requires a value to bind and a collection of arbitrary objects along with the "),Object(n["k"])("i",null,"optionLabel"),Object(n["n"])(" property to specify the label property of the option.")],-1),L=Object(n["k"])("code",null,'\n<MultiSelect v-model="selectedCars" :options="cars" optionLabel="brand" placeholder="Select Brands" />\n\n',-1),x=[L],I=Object(n["k"])("code",null,"\ndata() {\n\treturn {\n\t\tselectedCars: null,\n\t\tcars: [\n\t\t\t{brand: 'Audi', value: 'Audi'},\n\t\t\t{brand: 'BMW', value: 'BMW'},\n\t\t\t{brand: 'Fiat', value: 'Fiat'},\n\t\t\t{brand: 'Honda', value: 'Honda'},\n\t\t\t{brand: 'Jaguar', value: 'Jaguar'},\n\t\t\t{brand: 'Mercedes', value: 'Mercedes'},\n\t\t\t{brand: 'Renault', value: 'Renault'},\n\t\t\t{brand: 'Volkswagen', value: 'Volkswagen'},\n\t\t\t{brand: 'Volvo', value: 'Volvo'}\n\t\t]\n\t}\n}\n\n",-1),F=[I],D=Object(n["k"])("h5",null,"Chips Display",-1),G=Object(n["k"])("p",null,[Object(n["n"])("A comma separated list is used by default to display selected items whereas alternative chip mode is provided using the "),Object(n["k"])("i",null,"display"),Object(n["n"])(" property to visualize the items as tokens.")],-1),T=Object(n["k"])("code",null,'\n<MultiSelect v-model="selectedCars" :options="cars" optionLabel="brand" placeholder="Select Brands" display="chip"/>\n\n',-1),N=[T],V=Object(n["k"])("h5",null,"Grouping",-1),H=Object(n["k"])("p",null,[Object(n["n"])("Options groups are specified with the "),Object(n["k"])("i",null,"optionGroupLabel"),Object(n["n"])(" and "),Object(n["k"])("i",null,"optionGroupChildren"),Object(n["n"])(" properties.")],-1),B=Object(n["k"])("code",null,"\nexport default {\n    data() {\n        return {\n            selectedGroupedCities: null,\n            groupedCities: [{\n                label: 'Germany', code: 'DE',\n                items: [\n                    {label: 'Berlin', value: 'Berlin'},\n                    {label: 'Frankfurt', value: 'Frankfurt'},\n                    {label: 'Hamburg', value: 'Hamburg'},\n                    {label: 'Munich', value: 'Munich'}\n                ]\n            },\n            {\n                label: 'USA', code: 'US',\n                items: [\n                    {label: 'Chicago', value: 'Chicago'},\n                    {label: 'Los Angeles', value: 'Los Angeles'},\n                    {label: 'New York', value: 'New York'},\n                    {label: 'San Francisco', value: 'San Francisco'}\n                ]\n            },\n            {\n                label: 'Japan', code: 'JP',\n                items: [\n                    {label: 'Kyoto', value: 'Kyoto'},\n                    {label: 'Osaka', value: 'Osaka'},\n                    {label: 'Tokyo', value: 'Tokyo'},\n                    {label: 'Yokohama', value: 'Yokohama'}\n                ]\n            }]\n        }\n    }\n}\n",-1),E=[B],U=Object(n["k"])("code",null,[Object(n["k"])("template",null,[Object(n["n"])('\n<MultiSelect v-model="selectedGroupedCities" :options="groupedCities"\n        optionLabel="label" optionGroupLabel="label" optionGroupChildren="items">\n</MultiSelect>\n')]),Object(n["n"])("\n")],-1),Y=[U],R=Object(n["k"])("h5",null,"Filtering",-1),J=Object(n["k"])("p",null,[Object(n["n"])(" Filtering allows searching items in the list using an input field at the header. In order to use filtering, enable "),Object(n["k"])("i",null,"filter"),Object(n["n"])(" property. By default, optionLabel is used when searching and "),Object(n["k"])("i",null,"filterFields"),Object(n["n"])(" can be used to customize the fields being utilized. Furthermore, "),Object(n["k"])("i",null,"filterMatchMode"),Object(n["n"])(' is available to define the search algorithm. Valid values are "contains" (default), "startsWith" and "endsWith". ')],-1),K=Object(n["k"])("code",null,'\n<MultiSelect v-model="selectedCars" :options="cars" :filter="true" optionLabel="brand" placeholder="Select Brands"/>\n\n',-1),W=[K],_=Object(n["k"])("h5",null,"Templating",-1),z=Object(n["k"])("p",null,[Object(n["n"])(" Label of an option is used as the display text of an item by default, for custom content support define an "),Object(n["k"])("i",null,"option"),Object(n["n"])(" template that gets the option instance as a parameter. In addition "),Object(n["k"])("i",null,"value"),Object(n["n"])(", "),Object(n["k"])("i",null,"optiongroup"),Object(n["n"])(", "),Object(n["k"])("i",null,"chip"),Object(n["n"])(", "),Object(n["k"])("i",null,"header"),Object(n["n"])(", "),Object(n["k"])("i",null,"footer"),Object(n["n"])(", "),Object(n["k"])("i",null,"emptyfilter"),Object(n["n"])(" and "),Object(n["k"])("i",null,"empty"),Object(n["n"])(" slots are provided for further customization. ")],-1),$=Object(n["k"])("code",null,[Object(n["k"])("template",null,[Object(n["n"])('\n<MultiSelect v-model="selectedCars2" :options="cars" optionLabel="brand" placeholder="Select a Car">\n\t<template #value="slotProps">\n\t\t<div class="p-multiselect-car-token" v-for="option of slotProps.value" :key="option.brand">\n\t\t\t<img :alt="option.brand" :src="\'demo/images/car/\' + option.brand + \'.png\'" />\n\t\t\t<span>{{option.brand}}</span>\n\t\t</div>\n\t\t<template v-if="!slotProps.value || slotProps.value.length === 0">\n            Select Brands\n        </template>\n\t</template>\n\t<template #option="slotProps">\n\t\t<div class="p-multiselect-car-option">\n\t\t\t<img :alt="slotProps.option.brand" :src="\'demo/images/car/\' + slotProps.option.brand + \'.png\'" />\n\t\t\t<span>{{slotProps.option.brand}}</span>\n\t\t</div>\n\t</template>\n</MultiSelect>\n')]),Object(n["n"])("\n")],-1),Z=[$],q=Object(n["k"])("h5",null,"Properties",-1),Q=Object(n["k"])("p",null,"Any property of HTMLDivElement are passed to the main container element. Following are the additional properties to configure the component.",-1),X={class:"doc-tablewrapper"},ee={class:"doc-table"},te=Object(n["k"])("thead",null,[Object(n["k"])("tr",null,[Object(n["k"])("th",null,"Name"),Object(n["k"])("th",null,"Type"),Object(n["k"])("th",null,"Default"),Object(n["k"])("th",null,"Description")])],-1),le=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"modelValue"),Object(n["k"])("td",null,"any"),Object(n["k"])("td",null,"null"),Object(n["k"])("td",null,"Value of the component.")],-1),ne=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"options"),Object(n["k"])("td",null,"array"),Object(n["k"])("td",null,"null"),Object(n["k"])("td",null,"An array of selectitems to display as the available options.")],-1),ce=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"optionLabel"),Object(n["k"])("td",null,"string | function"),Object(n["k"])("td",null,"null"),Object(n["k"])("td",null,"Property name or getter function to use as the label of an option.")],-1),oe=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"optionValue"),Object(n["k"])("td",null,"string | function"),Object(n["k"])("td",null,"null"),Object(n["k"])("td",null,"Property name or getter function to use as the value of an option, defaults to the option itself when not defined.")],-1),ae=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"optionDisabled"),Object(n["k"])("td",null,"string | function"),Object(n["k"])("td",null,"null"),Object(n["k"])("td",null,"Property name or getter function to use as the disabled flag of an option, defaults to false when not defined.")],-1),ie=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"optionGroupLabel"),Object(n["k"])("td",null,"string | function"),Object(n["k"])("td",null,"null"),Object(n["k"])("td",null,"Property name or getter function to use as the label of an option group.")],-1),ue=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"optionGroupChildren"),Object(n["k"])("td",null,"string | function"),Object(n["k"])("td",null,"null"),Object(n["k"])("td",null,"Property name or getter function that refers to the children options of option group.")],-1),se=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"scrollHeight"),Object(n["k"])("td",null,"string"),Object(n["k"])("td",null,"200px"),Object(n["k"])("td",null,"Height of the viewport, a scrollbar is defined if height of list exceeds this value.")],-1),re=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"placeholder"),Object(n["k"])("td",null,"string"),Object(n["k"])("td",null,"null"),Object(n["k"])("td",null,"Label to display when there are no selections.")],-1),be=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"disabled"),Object(n["k"])("td",null,"boolean"),Object(n["k"])("td",null,"false"),Object(n["k"])("td",null,"When present, it specifies that the component should be disabled.")],-1),de=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"inputId"),Object(n["k"])("td",null,"string"),Object(n["k"])("td",null,"null"),Object(n["k"])("td",null,"Identifier of the underlying input element.")],-1),pe=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"inputProps"),Object(n["k"])("td",null,"object"),Object(n["k"])("td",null,"null"),Object(n["k"])("td",null,"Uses to pass all properties of the HTMLInputElement to the focusable input element inside the component.")],-1),Oe=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"panelStyle"),Object(n["k"])("td",null,"any"),Object(n["k"])("td",null,"null"),Object(n["k"])("td",null,"Inline style of the overlay panel.")],-1),je=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"panelClass"),Object(n["k"])("td",null,"string"),Object(n["k"])("td",null,"null"),Object(n["k"])("td",null,"Style class of the overlay panel.")],-1),ke=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"panelProps"),Object(n["k"])("td",null,"object"),Object(n["k"])("td",null,"null"),Object(n["k"])("td",null,"Uses to pass all properties of the HTMLDivElement to the overlay panel.")],-1),he=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"filterInputProps"),Object(n["k"])("td",null,"object"),Object(n["k"])("td",null,"null"),Object(n["k"])("td",null,"Uses to pass all properties of the HTMLInputElement to the filter input inside the overlay panel.")],-1),me=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"closeButtonProps"),Object(n["k"])("td",null,"object"),Object(n["k"])("td",null,"null"),Object(n["k"])("td",null,"Uses to pass all properties of the HTMLButtonElement to the close button inside the overlay panel.")],-1),ve=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"dataKey"),Object(n["k"])("td",null,"string"),Object(n["k"])("td",null,"null"),Object(n["k"])("td",null,"A property to uniquely identify an option.")],-1),fe=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"filter"),Object(n["k"])("td",null,"boolean"),Object(n["k"])("td",null,"false"),Object(n["k"])("td",null,"When specified, displays a filter input at header.")],-1),ge=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"filterPlaceholder"),Object(n["k"])("td",null,"string"),Object(n["k"])("td",null,"null"),Object(n["k"])("td",null,"Placeholder text to show when filter input is empty.")],-1),ye=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"filterLocale"),Object(n["k"])("td",null,"string"),Object(n["k"])("td",null,"undefined"),Object(n["k"])("td",null,"Locale to use in filtering. The default locale is the host environment's current locale.")],-1),we=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"filterMatchMode"),Object(n["k"])("td",null,"string"),Object(n["k"])("td",null,"contains"),Object(n["k"])("td",null,'Defines the filtering algorithm to use when searching the options. Valid values are "contains" (default), "startsWith" and "endsWith"')],-1),Ce=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"filterFields"),Object(n["k"])("td",null,"array"),Object(n["k"])("td",null,"null"),Object(n["k"])("td",null,"Fields used when filtering the options, defaults to optionLabel.")],-1),Se=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"appendTo"),Object(n["k"])("td",null,"string"),Object(n["k"])("td",null,"body"),Object(n["k"])("td",null,'A valid query selector or an HTMLElement to specify where the overlay gets attached. Special keywords are "body" for document body and "self" for the element itself.')],-1),Ae=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"display"),Object(n["k"])("td",null,"string"),Object(n["k"])("td",null,"comma"),Object(n["k"])("td",null,'Defines how the selected items are displayed, valid values are "comma" and "chip".')],-1),Me=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"selectedItemsLabel"),Object(n["k"])("td",null,"string"),Object(n["k"])("td",null,"{0} items selected"),Object(n["k"])("td",null,"Label to display after exceeding max selected labels.")],-1),Pe=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"maxSelectedLabels"),Object(n["k"])("td",null,"number"),Object(n["k"])("td",null,"null"),Object(n["k"])("td",null,"Decides how many selected item labels to show at most.")],-1),Le=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"selectionLimit"),Object(n["k"])("td",null,"number"),Object(n["k"])("td",null,"null"),Object(n["k"])("td",null,"Maximum number of selectable items.")],-1),xe=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"showToggleAll"),Object(n["k"])("td",null,"boolean"),Object(n["k"])("td",null,"true"),Object(n["k"])("td",null,"Whether to show the header checkbox to toggle the selection of all items at once.")],-1),Ie=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"loading"),Object(n["k"])("td",null,"boolean"),Object(n["k"])("td",null,"false"),Object(n["k"])("td",null,"Whether the multiselect is in loading state.")],-1),Fe=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"loadingIcon"),Object(n["k"])("td",null,"string"),Object(n["k"])("td",null,"pi pi-spinner pi-spin"),Object(n["k"])("td",null,"Icon to display in loading state.")],-1),De=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"selectAll"),Object(n["k"])("td",null,"boolean"),Object(n["k"])("td",null,"false"),Object(n["k"])("td",null,"Whether all data is selected.")],-1),Ge=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"resetFilterOnHide"),Object(n["k"])("td",null,"boolean"),Object(n["k"])("td",null,"false"),Object(n["k"])("td",null,"Clears the filter value when hiding the dropdown.")],-1),Te=Object(n["k"])("td",null,"virtualScrollerOptions",-1),Ne=Object(n["k"])("td",null,"object",-1),Ve=Object(n["k"])("td",null,"null",-1),He=Object(n["n"])("Whether to use the virtualScroller feature. The properties of "),Be=Object(n["n"])("VirtualScroller"),Ee=Object(n["n"])(" component can be used like an object in it."),Ue=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"autoOptionFocus"),Object(n["k"])("td",null,"boolean"),Object(n["k"])("td",null,"true"),Object(n["k"])("td",null,"Whether to focus on the first visible or selected element when the overlay panel is shown.")],-1),Ye=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"autoFilterFocus"),Object(n["k"])("td",null,"boolean"),Object(n["k"])("td",null,"false"),Object(n["k"])("td",null,"Whether to focus on the filter element when the overlay panel is shown.")],-1),Re=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"filterMessage"),Object(n["k"])("td",null,"string"),Object(n["k"])("td",null,"{0} results are available"),Object(n["k"])("td",null,"Text to be displayed in hidden accessible field when filtering returns any results. Defaults to value from PrimeVue locale configuration.")],-1),Je=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"selectionMessage"),Object(n["k"])("td",null,"string"),Object(n["k"])("td",null,"{0} items selected"),Object(n["k"])("td",null,"Text to be displayed in hidden accessible field when options are selected. Defaults to value from PrimeVue locale configuration.")],-1),Ke=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"emptySelectionMessage"),Object(n["k"])("td",null,"string"),Object(n["k"])("td",null,"No selected item"),Object(n["k"])("td",null,"Text to be displayed in hidden accessible field when any option is not selected. Defaults to value from PrimeVue locale configuration.")],-1),We=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"emptyFilterMessage"),Object(n["k"])("td",null,"string"),Object(n["k"])("td",null,"No results found"),Object(n["k"])("td",null,"Text to be displayed when filtering does not return any results. Defaults to value from PrimeVue locale configuration.")],-1),_e=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"emptyMessage"),Object(n["k"])("td",null,"string"),Object(n["k"])("td",null,"No results found"),Object(n["k"])("td",null,"Text to be displayed when there are no options available. Defaults to value from PrimeVue locale configuration.")],-1),ze=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"tabindex"),Object(n["k"])("td",null,"number"),Object(n["k"])("td",null,"0"),Object(n["k"])("td",null,"Index of the element in tabbing order.")],-1),$e=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"aria-label"),Object(n["k"])("td",null,"string"),Object(n["k"])("td",null,"null"),Object(n["k"])("td",null,"Defines a string value that labels an interactive element.")],-1),Ze=Object(n["k"])("tr",null,[Object(n["k"])("td",null,"aria-labelledby"),Object(n["k"])("td",null,"string"),Object(n["k"])("td",null,"null"),Object(n["k"])("td",null,"Establishes relationships between the component and label(s) where its value should be one or more element IDs.")],-1),qe=Object(n["k"])("h5",null,"Events",-1),Qe=Object(n["k"])("div",{class:"doc-tablewrapper"},[Object(n["k"])("table",{class:"doc-table"},[Object(n["k"])("thead",null,[Object(n["k"])("tr",null,[Object(n["k"])("th",null,"Name"),Object(n["k"])("th",null,"Parameters"),Object(n["k"])("th",null,"Description")])]),Object(n["k"])("tbody",null,[Object(n["k"])("tr",null,[Object(n["k"])("td",null,"change"),Object(n["k"])("td",null,[Object(n["n"])(" event.originalEvent: Original event "),Object(n["k"])("br"),Object(n["n"])(" event.value: Selected option value ")]),Object(n["k"])("td",null,"Callback to invoke on value change.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"focus"),Object(n["k"])("td",null,"event"),Object(n["k"])("td",null,"Callback to invoke when the component receives focus.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"blur"),Object(n["k"])("td",null,"event"),Object(n["k"])("td",null,"Callback to invoke when the component loses focus.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"before-show"),Object(n["k"])("td",null,"-"),Object(n["k"])("td",null,"Callback to invoke before the overlay is shown.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"before-hide"),Object(n["k"])("td",null,"-"),Object(n["k"])("td",null,"Callback to invoke before the overlay is hidden.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"show"),Object(n["k"])("td",null,"-"),Object(n["k"])("td",null,"Callback to invoke when the overlay is shown.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"hide"),Object(n["k"])("td",null,"-"),Object(n["k"])("td",null,"Callback to invoke when the overlay is hidden.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"filter"),Object(n["k"])("td",null,[Object(n["n"])(" event.originalEvent: Original event "),Object(n["k"])("br"),Object(n["n"])(" event.value: Filter value ")]),Object(n["k"])("td",null,"Callback to invoke on filter input.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"selectall-change"),Object(n["k"])("td",null,[Object(n["n"])(" event.originalEvent: Original event "),Object(n["k"])("br"),Object(n["n"])(" event.checked: Whether all data is selected. ")]),Object(n["k"])("td",null,"Callback to invoke when all data is selected.")])])])],-1),Xe=Object(n["k"])("h5",null,"Methods",-1),et=Object(n["k"])("div",{class:"doc-tablewrapper"},[Object(n["k"])("table",{class:"doc-table"},[Object(n["k"])("thead",null,[Object(n["k"])("tr",null,[Object(n["k"])("th",null,"Name"),Object(n["k"])("th",null,"Parameters"),Object(n["k"])("th",null,"Description")])]),Object(n["k"])("tbody",null,[Object(n["k"])("tr",null,[Object(n["k"])("td",null,"show"),Object(n["k"])("td",null,"isFocus: Decides whether to focus on the component. Default value is false."),Object(n["k"])("td",null,"Shows the overlay.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"hide"),Object(n["k"])("td",null,"isFocus: Decides whether to focus on the component. Default value is false."),Object(n["k"])("td",null,"Hides the overlay.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"clearFilter"),Object(n["k"])("td",null,"-"),Object(n["k"])("td",null,"Clears filter input.")])])])],-1),tt=Object(n["k"])("h5",null,"Slots",-1),lt=Object(n["k"])("div",{class:"doc-tablewrapper"},[Object(n["k"])("table",{class:"doc-table"},[Object(n["k"])("thead",null,[Object(n["k"])("tr",null,[Object(n["k"])("th",null,"Name"),Object(n["k"])("th",null,"Parameters")])]),Object(n["k"])("tbody",null,[Object(n["k"])("tr",null,[Object(n["k"])("td",null,"value"),Object(n["k"])("td",null,[Object(n["n"])(" value: Value of the component "),Object(n["k"])("br"),Object(n["n"])(" placeholder: Placeholder prop value ")])]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"chip"),Object(n["k"])("td",null,"value: A value in the selection")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"indicator"),Object(n["k"])("td",null,"-")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"header"),Object(n["k"])("td",null,[Object(n["n"])(" value: Value of the component "),Object(n["k"])("br"),Object(n["n"])(" options: Displayed options ")])]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"footer"),Object(n["k"])("td",null,[Object(n["n"])(" value: Value of the component "),Object(n["k"])("br"),Object(n["n"])(" options: Displayed options ")])]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"option"),Object(n["k"])("td",null,[Object(n["n"])(" option: Option instance "),Object(n["k"])("br"),Object(n["n"])(" index: Index of the option ")])]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"optiongroup"),Object(n["k"])("td",null,[Object(n["n"])(" option: OptionGroup instance "),Object(n["k"])("br"),Object(n["n"])(" index: Index of the option group ")])]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"emptyfilter"),Object(n["k"])("td",null,"-")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"empty"),Object(n["k"])("td",null,"-")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"content"),Object(n["k"])("td",null,[Object(n["n"])(" items: An array of objects to display for virtualscroller"),Object(n["k"])("br"),Object(n["n"])(" styleClass: Style class of the component"),Object(n["k"])("br"),Object(n["n"])(" contentRef: Referance of the content"),Object(n["k"])("br"),Object(n["n"])(" getItemOptions: Options of the items ")])]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"loader"),Object(n["k"])("td",null,"options: Options of the loader items for virtualscroller")])])])],-1),nt=Object(n["k"])("h5",null,"Styling",-1),ct=Object(n["n"])("Following is the list of structural style classes, for theming classes visit "),ot=Object(n["n"])("theming"),at=Object(n["n"])(" page."),it=Object(n["k"])("div",{class:"doc-tablewrapper"},[Object(n["k"])("table",{class:"doc-table"},[Object(n["k"])("thead",null,[Object(n["k"])("tr",null,[Object(n["k"])("th",null,"Name"),Object(n["k"])("th",null,"Element")])]),Object(n["k"])("tbody",null,[Object(n["k"])("tr",null,[Object(n["k"])("td",null,"p-multiselect"),Object(n["k"])("td",null,"Container element.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"p-multiselect-label-container"),Object(n["k"])("td",null,"Container of the label to display selected items.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"p-multiselect-label-container"),Object(n["k"])("td",null,"Label to display selected items.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"p-multiselect-trigger"),Object(n["k"])("td",null,"Dropdown button.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"p-multiselect-filter-container"),Object(n["k"])("td",null,"Container of filter input.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"p-multiselect-panel"),Object(n["k"])("td",null,"Overlay panel for items.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"p-multiselect-items"),Object(n["k"])("td",null,"List container of items.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"p-multiselect-item"),Object(n["k"])("td",null,"An item in the list.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,"p-overlay-open"),Object(n["k"])("td",null,"Container element when overlay is visible.")])])])],-1),ut=Object(n["k"])("h5",null,"Accessibility",-1),st=Object(n["k"])("h6",null,"Screen Reader",-1),rt=Object(n["k"])("p",null,[Object(n["n"])(" Value to describe the component can either be provided with "),Object(n["k"])("i",null,"aria-labelledby"),Object(n["n"])(" or "),Object(n["k"])("i",null,"aria-label"),Object(n["n"])(" props. The multiselect component has a "),Object(n["k"])("i",null,"combobox"),Object(n["n"])(" role in addition to "),Object(n["k"])("i",null,"aria-haspopup"),Object(n["n"])(" and "),Object(n["k"])("i",null,"aria-expanded"),Object(n["n"])(" attributes. The relation between the combobox and the popup is created with "),Object(n["k"])("i",null,"aria-controls"),Object(n["n"])(" attribute that refers to the id of the popup listbox. ")],-1),bt=Object(n["k"])("p",null,[Object(n["n"])("The popup listbox uses "),Object(n["k"])("i",null,"listbox"),Object(n["n"])(" as the role with "),Object(n["k"])("i",null,"aria-multiselectable"),Object(n["n"])(" enabled. Each list item has an "),Object(n["k"])("i",null,"option"),Object(n["n"])(" role along with "),Object(n["k"])("i",null,"aria-label"),Object(n["n"])(", "),Object(n["k"])("i",null,"aria-selected"),Object(n["n"])(" and "),Object(n["k"])("i",null,"aria-disabled"),Object(n["n"])(" attributes.")],-1),dt=Object(n["n"])(" Checkbox component at the header uses a hidden native checkbox element internally that is only visible to screen readers. Value to read is defined with the "),pt=Object(n["k"])("i",null,"selectAll",-1),Ot=Object(n["n"])(" and "),jt=Object(n["k"])("i",null,"unselectAll",-1),kt=Object(n["n"])(" keys of the "),ht=Object(n["k"])("i",null,"aria",-1),mt=Object(n["n"])(" property from the "),vt=Object(n["n"])("locale"),ft=Object(n["n"])(" API. "),gt=Object(n["k"])("p",null,[Object(n["n"])("If filtering is enabled, "),Object(n["k"])("i",null,"filterInputProps"),Object(n["n"])(" can be defined to give "),Object(n["k"])("i",null,"aria-*"),Object(n["n"])(" props to the input element.")],-1),yt=Object(n["n"])("Close button uses "),wt=Object(n["k"])("i",null,"close",-1),Ct=Object(n["n"])(" key of the "),St=Object(n["k"])("i",null,"aria",-1),At=Object(n["n"])(" property from the "),Mt=Object(n["n"])("locale"),Pt=Object(n["n"])(" API as the "),Lt=Object(n["k"])("i",null,"aria-label",-1),xt=Object(n["n"])(" by default, this can be overriden with the "),It=Object(n["k"])("i",null,"closeButtonProps",-1),Ft=Object(n["n"])("."),Dt=Object(n["k"])("code",null,'\n<span id="dd1">Options</span>\n<MultiSelect aria-labelledby="dd1" />\n\n<MultiSelect aria-label="Options" />\n\n',-1),Gt=[Dt],Tt=Object(n["k"])("h6",null,"Closed State Keyboard Support",-1),Nt=Object(n["k"])("div",{class:"doc-tablewrapper"},[Object(n["k"])("table",{class:"doc-table"},[Object(n["k"])("thead",null,[Object(n["k"])("tr",null,[Object(n["k"])("th",null,"Key"),Object(n["k"])("th",null,"Function")])]),Object(n["k"])("tbody",null,[Object(n["k"])("tr",null,[Object(n["k"])("td",null,[Object(n["k"])("i",null,"tab")]),Object(n["k"])("td",null,"Moves focus to the multiselect element.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,[Object(n["k"])("i",null,"space")]),Object(n["k"])("td",null,"Opens the popup and moves visual focus to the selected option, if there is none then first option receives the focus.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,[Object(n["k"])("i",null,"enter")]),Object(n["k"])("td",null,"Opens the popup and moves visual focus to the selected option, if there is none then first option receives the focus.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,[Object(n["k"])("i",null,"down arrow")]),Object(n["k"])("td",null,"Opens the popup and moves visual focus to the selected option, if there is none then first option receives the focus.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,[Object(n["k"])("i",null,"up arrow")]),Object(n["k"])("td",null,"Opens the popup and moves visual focus to the selected option, if there is none then first option receives the focus.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,[Object(n["k"])("i",null,"any printable character")]),Object(n["k"])("td",null,"Opens the popup and moves focus to the option whose label starts with the characters being typed, if there is none then first option receives the focus.")])])])],-1),Vt=Object(n["k"])("h6",null,"Popup Keyboard Support",-1),Ht=Object(n["k"])("div",{class:"doc-tablewrapper"},[Object(n["k"])("table",{class:"doc-table"},[Object(n["k"])("thead",null,[Object(n["k"])("tr",null,[Object(n["k"])("th",null,"Key"),Object(n["k"])("th",null,"Function")])]),Object(n["k"])("tbody",null,[Object(n["k"])("tr",null,[Object(n["k"])("td",null,[Object(n["k"])("i",null,"tab")]),Object(n["k"])("td",null,"Moves focus to the next focusable element in the popup, if there is none then first focusable element receives the focus.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,[Object(n["k"])("i",null,"shift"),Object(n["n"])(" + "),Object(n["k"])("i",null,"tab")]),Object(n["k"])("td",null,"Moves focus to the previous focusable element in the popup, if there is none then last focusable element receives the focus.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,[Object(n["k"])("i",null,"enter")]),Object(n["k"])("td",null,"Toggles the selection state of the focused option, then moves focus to the multiselect element.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,[Object(n["k"])("i",null,"space")]),Object(n["k"])("td",null,"Toggles the selection state of the focused option, then moves focus to the multiselect element.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,[Object(n["k"])("i",null,"escape")]),Object(n["k"])("td",null,"Closes the popup, moves focus to the multiselect element.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,[Object(n["k"])("i",null,"down arrow")]),Object(n["k"])("td",null,"Moves focus to the next option, if there is none then visual focus does not change.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,[Object(n["k"])("i",null,"up arrow")]),Object(n["k"])("td",null,"Moves focus to the previous option, if there is none then visual focus does not change.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,[Object(n["k"])("i",null,"alt"),Object(n["n"])(" + "),Object(n["k"])("i",null,"up arrow")]),Object(n["k"])("td",null,"Selects the focused option and closes the popup, then moves focus to the multiselect element.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,[Object(n["k"])("i",null,"shift"),Object(n["n"])(" + "),Object(n["k"])("i",null,"down arrow")]),Object(n["k"])("td",null,"Moves focus to the next option and toggles the selection state.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,[Object(n["k"])("i",null,"shift"),Object(n["n"])(" + "),Object(n["k"])("i",null,"up arrow")]),Object(n["k"])("td",null,"Moves focus to the previous option and toggles the selection state.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,[Object(n["k"])("i",null,"shift"),Object(n["n"])(" + "),Object(n["k"])("i",null,"space")]),Object(n["k"])("td",null,"Selects the items between the most recently selected option and the focused option.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,[Object(n["k"])("i",null,"home")]),Object(n["k"])("td",null,"Moves focus to the first option.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,[Object(n["k"])("i",null,"end")]),Object(n["k"])("td",null,"Moves focus to the last option.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,[Object(n["k"])("i",null,"control"),Object(n["n"])(" + "),Object(n["k"])("i",null,"shift"),Object(n["n"])(" + "),Object(n["k"])("i",null,"home")]),Object(n["k"])("td",null,"Selects the focused options and all the options up to the first one.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,[Object(n["k"])("i",null,"control"),Object(n["n"])(" + "),Object(n["k"])("i",null,"shift"),Object(n["n"])(" + "),Object(n["k"])("i",null,"end")]),Object(n["k"])("td",null,"Selects the focused options and all the options down to the last one.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,[Object(n["k"])("i",null,"control"),Object(n["n"])(" + "),Object(n["k"])("i",null,"a")]),Object(n["k"])("td",null,"Selects all options.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,[Object(n["k"])("i",null,"pageUp")]),Object(n["k"])("td",null,"Jumps visual focus to first option.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,[Object(n["k"])("i",null,"pageDown")]),Object(n["k"])("td",null,"Jumps visual focus to last option.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,[Object(n["k"])("i",null,"any printable character")]),Object(n["k"])("td",null,"Moves focus to the option whose label starts with the characters being typed.")])])])],-1),Bt=Object(n["k"])("h6",null,"Toggle All Checkbox Keyboard Support",-1),Et=Object(n["k"])("div",{class:"doc-tablewrapper"},[Object(n["k"])("table",{class:"doc-table"},[Object(n["k"])("thead",null,[Object(n["k"])("tr",null,[Object(n["k"])("th",null,"Key"),Object(n["k"])("th",null,"Function")])]),Object(n["k"])("tbody",null,[Object(n["k"])("tr",null,[Object(n["k"])("td",null,[Object(n["k"])("i",null,"space")]),Object(n["k"])("td",null,"Toggles the checked state.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,[Object(n["k"])("i",null,"escape")]),Object(n["k"])("td",null,"Closes the popup and moves focus to the multiselect element.")])])])],-1),Ut=Object(n["k"])("h6",null,"Filter Input Keyboard Support",-1),Yt=Object(n["k"])("div",{class:"doc-tablewrapper"},[Object(n["k"])("table",{class:"doc-table"},[Object(n["k"])("thead",null,[Object(n["k"])("tr",null,[Object(n["k"])("th",null,"Key"),Object(n["k"])("th",null,"Function")])]),Object(n["k"])("tbody",null,[Object(n["k"])("tr",null,[Object(n["k"])("td",null,[Object(n["k"])("i",null,"down arrow")]),Object(n["k"])("td",null,"Moves focus to the next option, if there is none then visual focus does not change.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,[Object(n["k"])("i",null,"up arrow")]),Object(n["k"])("td",null,"Moves focus to the previous option, if there is none then visual focus does not change.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,[Object(n["k"])("i",null,"left arrow")]),Object(n["k"])("td",null,"Removes the visual focus from the current option and moves input cursor to one character left.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,[Object(n["k"])("i",null,"right arrow")]),Object(n["k"])("td",null,"Removes the visual focus from the current option and moves input cursor to one character right.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,[Object(n["k"])("i",null,"home")]),Object(n["k"])("td",null,"Moves input cursor at the end, if not then moves focus to the first option.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,[Object(n["k"])("i",null,"end")]),Object(n["k"])("td",null,"Moves input cursor at the beginning, if not then moves focus to the last option.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,[Object(n["k"])("i",null,"enter")]),Object(n["k"])("td",null,"Closes the popup and moves focus to the multiselect element.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,[Object(n["k"])("i",null,"escape")]),Object(n["k"])("td",null,"Closes the popup and moves focus to the multiselect element.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,[Object(n["k"])("i",null,"tab")]),Object(n["k"])("td",null,"Moves focus to the next focusable element in the popup. If there is none, the focusable option is selected and the overlay is closed then moves focus to next element in page.")])])])],-1),Rt=Object(n["k"])("h6",null,"Close Button Keyboard Support",-1),Jt=Object(n["k"])("div",{class:"doc-tablewrapper"},[Object(n["k"])("table",{class:"doc-table"},[Object(n["k"])("thead",null,[Object(n["k"])("tr",null,[Object(n["k"])("th",null,"Key"),Object(n["k"])("th",null,"Function")])]),Object(n["k"])("tbody",null,[Object(n["k"])("tr",null,[Object(n["k"])("td",null,[Object(n["k"])("i",null,"enter")]),Object(n["k"])("td",null,"Closes the popup and moves focus to the multiselect element.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,[Object(n["k"])("i",null,"space")]),Object(n["k"])("td",null,"Closes the popup and moves focus to the multiselect element.")]),Object(n["k"])("tr",null,[Object(n["k"])("td",null,[Object(n["k"])("i",null,"escape")]),Object(n["k"])("td",null,"Closes the popup and moves focus to the multiselect element.")])])])],-1),Kt=Object(n["k"])("h5",null,"Dependencies",-1),Wt=Object(n["k"])("p",null,"None.",-1);function _t(e,t,l,c,o,a){var i=Object(n["P"])("router-link"),u=Object(n["P"])("AppDoc"),s=Object(n["Q"])("code");return Object(n["H"])(),Object(n["h"])(u,{name:"MultiSelectDemo",sources:o.sources,github:"multiselect/MultiSelectDemo.vue"},{default:Object(n["Z"])((function(){return[g,Object(n["ab"])((Object(n["H"])(),Object(n["j"])("pre",null,w)),[[s,void 0,void 0,{script:!0}]]),C,Object(n["ab"])((Object(n["H"])(),Object(n["j"])("pre",null,A)),[[s]]),M,P,Object(n["ab"])((Object(n["H"])(),Object(n["j"])("pre",null,x)),[[s]]),Object(n["ab"])((Object(n["H"])(),Object(n["j"])("pre",null,F)),[[s,void 0,void 0,{script:!0}]]),D,G,Object(n["ab"])((Object(n["H"])(),Object(n["j"])("pre",null,N)),[[s]]),V,H,Object(n["ab"])((Object(n["H"])(),Object(n["j"])("pre",null,E)),[[s,void 0,void 0,{script:!0}]]),Object(n["ab"])((Object(n["H"])(),Object(n["j"])("pre",null,Y)),[[s]]),R,J,Object(n["ab"])((Object(n["H"])(),Object(n["j"])("pre",null,W)),[[s]]),_,z,Object(n["ab"])((Object(n["H"])(),Object(n["j"])("pre",null,Z)),[[s]]),q,Q,Object(n["k"])("div",X,[Object(n["k"])("table",ee,[te,Object(n["k"])("tbody",null,[le,ne,ce,oe,ae,ie,ue,se,re,be,de,pe,Oe,je,ke,he,me,ve,fe,ge,ye,we,Ce,Se,Ae,Me,Pe,Le,xe,Ie,Fe,De,Ge,Object(n["k"])("tr",null,[Te,Ne,Ve,Object(n["k"])("td",null,[He,Object(n["o"])(i,{to:"/virtualscroller"},{default:Object(n["Z"])((function(){return[Be]})),_:1}),Ee])]),Ue,Ye,Re,Je,Ke,We,_e,ze,$e,Ze])])]),qe,Qe,Xe,et,tt,lt,nt,Object(n["k"])("p",null,[ct,Object(n["o"])(i,{to:"/theming"},{default:Object(n["Z"])((function(){return[ot]})),_:1}),at]),it,ut,st,rt,bt,Object(n["k"])("p",null,[dt,pt,Ot,jt,kt,ht,mt,Object(n["o"])(i,{to:"/locale"},{default:Object(n["Z"])((function(){return[vt]})),_:1}),ft]),gt,Object(n["k"])("p",null,[yt,wt,Ct,St,At,Object(n["o"])(i,{to:"/locale"},{default:Object(n["Z"])((function(){return[Mt]})),_:1}),Pt,Lt,xt,It,Ft]),Object(n["ab"])((Object(n["H"])(),Object(n["j"])("pre",null,Gt)),[[s]]),Tt,Nt,Vt,Ht,Bt,Et,Ut,Yt,Rt,Jt,Kt,Wt]})),_:1},8,["sources"])}var zt={data:function(){return{sources:{"options-api":{tabName:"Options API Source",content:"\n<template>\n    <div>\n        <h5>Basic</h5>\n        <MultiSelect v-model=\"selectedCities1\" :options=\"cities\" optionLabel=\"name\" placeholder=\"Select Cities\" />\n\n        <h5>Chips</h5>\n        <MultiSelect v-model=\"selectedCities2\" :options=\"cities\" optionLabel=\"name\" placeholder=\"Select Cities\" display=\"chip\" />\n\n        <h5>Grouped</h5>\n        <MultiSelect v-model=\"selectedGroupedCities\" :options=\"groupedCities\" optionLabel=\"label\"  optionGroupLabel=\"label\" optionGroupChildren=\"items\" placeholder=\"Select Cities\">\n            <template #optiongroup=\"slotProps\">\n                <div class=\"flex align-items-center country-item\">\n                    <img src=\"https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png\" class=\"mr-2\" width=\"18\" />\n                    <div>{{slotProps.option.label}}</div>\n                </div>\n            </template>\n        </MultiSelect>\n\n        <h5>Advanced with Templating and Filtering</h5>\n        <MultiSelect v-model=\"selectedCountries\" :options=\"countries\" optionLabel=\"name\" placeholder=\"Select Countries\" :filter=\"true\" class=\"multiselect-custom\">\n            <template #value=\"slotProps\">\n                <div class=\"country-item country-item-value\" v-for=\"option of slotProps.value\" :key=\"option.code\">\n                    <img src=\"https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png\" class=\"mr-2\" width=\"18\" />\n                    <div>{{option.name}}</div>\n                </div>\n                <template v-if=\"!slotProps.value || slotProps.value.length === 0\">\n                    Select Countries\n                </template>\n            </template>\n            <template #option=\"slotProps\">\n                <div class=\"country-item\">\n                    <img src=\"https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png\" class=\"mr-2\" width=\"18\" />\n                    <div>{{slotProps.option.name}}</div>\n                </div>\n            </template>\n        </MultiSelect>\n\n        <h5>Loading State</h5>\n        <MultiSelect placeholder=\"Loading...\" loading></MultiSelect>\n\n        <h5>Virtual Scroll (1000 Items)</h5>\n        <MultiSelect v-model=\"selectedItems\" :options=\"items\" :maxSelectedLabels=\"3\" :selectAll=\"selectAll\" @selectall-change=\"onSelectAllChange($event)\" @change=\"onChange($event)\" optionLabel=\"label\" optionValue=\"value\" :virtualScrollerOptions=\"{ itemSize: 44 }\" placeholder=\"Select Item\" />\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            selectedCities1: null,\n            selectedCities2: null,\n            selectedCountries: null,\n            selectedGroupedCities: null,\n            selectedItems: null,\n            selectAll: false,\n            cities: [\n                {name: 'New York', code: 'NY'},\n                {name: 'Rome', code: 'RM'},\n                {name: 'London', code: 'LDN'},\n                {name: 'Istanbul', code: 'IST'},\n                {name: 'Paris', code: 'PRS'}\n            ],\n            countries: [\n                {name: 'Australia', code: 'AU'},\n                {name: 'Brazil', code: 'BR'},\n                {name: 'China', code: 'CN'},\n                {name: 'Egypt', code: 'EG'},\n                {name: 'France', code: 'FR'},\n                {name: 'Germany', code: 'DE'},\n                {name: 'India', code: 'IN'},\n                {name: 'Japan', code: 'JP'},\n                {name: 'Spain', code: 'ES'},\n                {name: 'United States', code: 'US'}\n            ],\n            groupedCities: [{\n                label: 'Germany', code: 'DE',\n                items: [\n                    {label: 'Berlin', value: 'Berlin'},\n                    {label: 'Frankfurt', value: 'Frankfurt'},\n                    {label: 'Hamburg', value: 'Hamburg'},\n                    {label: 'Munich', value: 'Munich'}\n                ]\n            },\n            {\n                label: 'USA', code: 'US',\n                items: [\n                    {label: 'Chicago', value: 'Chicago'},\n                    {label: 'Los Angeles', value: 'Los Angeles'},\n                    {label: 'New York', value: 'New York'},\n                    {label: 'San Francisco', value: 'San Francisco'}\n                ]\n            },\n            {\n                label: 'Japan', code: 'JP',\n                items: [\n                    {label: 'Kyoto', value: 'Kyoto'},\n                    {label: 'Osaka', value: 'Osaka'},\n                    {label: 'Tokyo', value: 'Tokyo'},\n                    {label: 'Yokohama', value: 'Yokohama'}\n                ]\n            }],\n            items: Array.from({ length: 1000 }, (_, i) => ({ label: `Item #${i}`, value: i }))\n        }\n    },\n    methods: {\n        onSelectAllChange(event) {\n            this.selectedItems = event.checked ? this.items.map((item) => item.value) : [];\n            this.selectAll = event.checked;\n        },\n        onChange(event) {\n            this.selectAll = event.value.length === this.items.length\n        }\n    }\n}\n<\\/script>\n\n<style lang=\"scss\" scoped>\n.p-multiselect {\n    width: 18rem;\n}\n\n::v-deep(.multiselect-custom) {\n    .p-multiselect-label:not(.p-placeholder) {\n        padding-top: .25rem;\n        padding-bottom: .25rem;\n    }\n\n    .country-item-value {\n        padding: .25rem .5rem;\n        border-radius: 3px;\n        display: inline-flex;\n        margin-right: .5rem;\n        background-color: var(--primary-color);\n        color: var(--primary-color-text);\n\n        img.flag {\n            width: 17px;\n        }\n    }\n}\n\n@media screen and (max-width: 640px) {\n    .p-multiselect {\n        width: 100%;\n    }\n}\n</style>"},"composition-api":{tabName:"Composition API Source",content:"\n<template>\n    <div>\n        <h5>Basic</h5>\n        <MultiSelect v-model=\"selectedCities1\" :options=\"cities\" optionLabel=\"name\" placeholder=\"Select Cities\" />\n\n        <h5>Chips</h5>\n        <MultiSelect v-model=\"selectedCities2\" :options=\"cities\" optionLabel=\"name\" placeholder=\"Select Cities\" display=\"chip\" />\n\n        <h5>Grouped</h5>\n        <MultiSelect v-model=\"selectedGroupedCities\" :options=\"groupedCities\" optionLabel=\"label\"  optionGroupLabel=\"label\" optionGroupChildren=\"items\" placeholder=\"Select Cities\">\n            <template #optiongroup=\"slotProps\">\n                <div class=\"flex align-items-center country-item\">\n                    <img src=\"https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png\" class=\"mr-2\" width=\"18\" />\n                    <div>{{slotProps.option.label}}</div>\n                </div>\n            </template>\n        </MultiSelect>\n\n        <h5>Advanced with Templating and Filtering</h5>\n        <MultiSelect v-model=\"selectedCountries\" :options=\"countries\" optionLabel=\"name\" placeholder=\"Select Countries\" :filter=\"true\" class=\"multiselect-custom\">\n            <template #value=\"slotProps\">\n                <div class=\"country-item country-item-value\" v-for=\"option of slotProps.value\" :key=\"option.code\">\n                    <img src=\"https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png\" class=\"mr-2\" width=\"18\" />\n                    <div>{{option.name}}</div>\n                </div>\n                <template v-if=\"!slotProps.value || slotProps.value.length === 0\">\n                    Select Countries\n                </template>\n            </template>\n            <template #option=\"slotProps\">\n                <div class=\"country-item\">\n                    <img src=\"https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png\" class=\"mr-2\" width=\"18\" />\n                    <div>{{slotProps.option.name}}</div>\n                </div>\n            </template>\n        </MultiSelect>\n\n        <h5>Loading State</h5>\n        <MultiSelect placeholder=\"Loading...\" loading></MultiSelect>\n\n        <h5>Virtual Scroll (1000 Items)</h5>\n        <MultiSelect v-model=\"selectedItems\" :options=\"items\" :maxSelectedLabels=\"3\" :selectAll=\"selectAll\" @selectall-change=\"onSelectAllChange($event)\" @change=\"onChange($event)\" optionLabel=\"label\" optionValue=\"value\" :virtualScrollerOptions=\"{ itemSize: 44 }\" placeholder=\"Select Item\" />\n    </div>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n    setup() {\n        const selectedCities1 = ref();\n        const selectedCities2 = ref();\n        const selectedCountries = ref();\n        const selectedGroupedCities = ref();\n        const selectedItems = ref();\n        const selectAll = ref(false);\n        const cities = ref([\n            {name: 'New York', code: 'NY'},\n            {name: 'Rome', code: 'RM'},\n            {name: 'London', code: 'LDN'},\n            {name: 'Istanbul', code: 'IST'},\n            {name: 'Paris', code: 'PRS'}\n        ]);\n        const countries = ref([\n            {name: 'Australia', code: 'AU'},\n            {name: 'Brazil', code: 'BR'},\n            {name: 'China', code: 'CN'},\n            {name: 'Egypt', code: 'EG'},\n            {name: 'France', code: 'FR'},\n            {name: 'Germany', code: 'DE'},\n            {name: 'India', code: 'IN'},\n            {name: 'Japan', code: 'JP'},\n            {name: 'Spain', code: 'ES'},\n            {name: 'United States', code: 'US'}\n        ]);\n        const groupedCities = ref([\n            {\n                label: 'Germany', code: 'DE',\n                items: [\n                    {label: 'Berlin', value: 'Berlin'},\n                    {label: 'Frankfurt', value: 'Frankfurt'},\n                    {label: 'Hamburg', value: 'Hamburg'},\n                    {label: 'Munich', value: 'Munich'}\n                ]\n            },\n            {\n                label: 'USA', code: 'US',\n                items: [\n                    {label: 'Chicago', value: 'Chicago'},\n                    {label: 'Los Angeles', value: 'Los Angeles'},\n                    {label: 'New York', value: 'New York'},\n                    {label: 'San Francisco', value: 'San Francisco'}\n                ]\n            },\n            {\n                label: 'Japan', code: 'JP',\n                items: [\n                    {label: 'Kyoto', value: 'Kyoto'},\n                    {label: 'Osaka', value: 'Osaka'},\n                    {label: 'Tokyo', value: 'Tokyo'},\n                    {label: 'Yokohama', value: 'Yokohama'}\n                ]\n            }\n        ]);\n        const items = Array.from({ length: 1000 }, (_, i) => ({ label: `Item #${i}`, value: i }))\n\n        return { selectedCities1, selectedCities2, selectedCountries, selectedGroupedCities, cities, countries, groupedCities, items, selectedItems, selectAll }\n    },\n    methods: {\n        onSelectAllChange(event) {\n            this.selectedItems = event.checked ? this.items.map((item) => item.value) : [];\n            this.selectAll = event.checked;\n        },\n        onChange(event) {\n            this.selectAll = event.value.length === this.items.length\n        }\n    }\n}\n<\\/script>\n\n<style lang=\"scss\" scoped>\n.p-multiselect {\n    width: 18rem;\n}\n\n::v-deep(.multiselect-custom) {\n    .p-multiselect-label:not(.p-placeholder) {\n        padding-top: .25rem;\n        padding-bottom: .25rem;\n    }\n\n    .country-item-value {\n        padding: .25rem .5rem;\n        border-radius: 3px;\n        display: inline-flex;\n        margin-right: .5rem;\n        background-color: var(--primary-color);\n        color: var(--primary-color-text);\n\n        img.flag {\n            width: 17px;\n        }\n    }\n}\n\n@media screen and (max-width: 640px) {\n    .p-multiselect {\n        width: 100%;\n    }\n}\n</style>"},"browser-source":{tabName:"Browser Source",imports:'<script src="https://unpkg.com/primevue@^3/multiselect/multiselect.min.js"><\\/script>',content:"<div id=\"app\">\n            <h5>Basic</h5>\n            <p-multiselect v-model=\"selectedCities1\" :options=\"cities\" option-label=\"name\" placeholder=\"Select Cities\"></p-multiselect>\n\n            <h5>Chips</h5>\n            <p-multiselect v-model=\"selectedCities2\" :options=\"cities\" option-label=\"name\" placeholder=\"Select Cities\" display=\"chip\"></p-multiselect>\n\n            <h5>Grouped</h5>\n            <p-multiselect v-model=\"selectedGroupedCities\" :options=\"groupedCities\" option-label=\"label\"  option-group-label=\"label\" option-group-children=\"items\" placeholder=\"Select Cities\">\n                <template #optiongroup=\"slotProps\">\n                    <div class=\"flex align-items-center country-item\">\n                        <img src=\"https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png\" class=\"mr-2\" width=\"18\" />\n                        <div>{{slotProps.option.label}}</div>\n                    </div>\n                </template>\n            </p-multiselect >\n\n            <h5>Advanced with Templating and Filtering</h5>\n            <p-multiselect  v-model=\"selectedCountries\" :options=\"countries\" option-label=\"name\" placeholder=\"Select Countries\" :filter=\"true\" class=\"multiselect-custom\">\n                <template #value=\"slotProps\">\n                    <div class=\"country-item country-item-value\" v-for=\"option of slotProps.value\" :key=\"option.code\">\n                        <img src=\"https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png\" class=\"mr-2\" width=\"18\" />\n                        <div>{{option.name}}</div>\n                    </div>\n                    <template v-if=\"!slotProps.value || slotProps.value.length === 0\">\n                        Select Countries\n                    </template>\n                </template>\n                <template #option=\"slotProps\">\n                    <div class=\"country-item\">\n                        <img src=\"https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png\" class=\"mr-2\" width=\"18\" />\n                        <div>{{slotProps.option.name}}</div>\n                    </div>\n                </template>\n            </p-multiselect >\n\n            <h5>Loading State</h5>\n            <p-multiselect  placeholder=\"Loading...\" loading></p-multiselect >\n\n            <h5>Virtual Scroll (1000 Items)</h5>\n            <p-multiselect  v-model=\"selectedItems\" :options=\"items\" :max-selected-labels=\"3\" :select-all=\"selectAll\" @selectall-change=\"onSelectAllChange($event)\" @change=\"onChange($event)\" option-label=\"label\" option-value=\"value\" :virtual-scroller-options=\"{ itemSize: 44 }\" placeholder=\"Select Item\"></p-multiselect>\n        </div>\n\n        <script type=\"module\">\n        const { createApp, ref } = Vue;\n\n        const App = {\n            setup() {\n                const selectedCities1 = ref();\n                const selectedCities2 = ref();\n                const selectedCountries = ref();\n                const selectedGroupedCities = ref();\n                const selectedItems = ref();\n                const selectAll = ref(false);\n                const cities = ref([\n                    {name: 'New York', code: 'NY'},\n                    {name: 'Rome', code: 'RM'},\n                    {name: 'London', code: 'LDN'},\n                    {name: 'Istanbul', code: 'IST'},\n                    {name: 'Paris', code: 'PRS'}\n                ]);\n                const countries = ref([\n                    {name: 'Australia', code: 'AU'},\n                    {name: 'Brazil', code: 'BR'},\n                    {name: 'China', code: 'CN'},\n                    {name: 'Egypt', code: 'EG'},\n                    {name: 'France', code: 'FR'},\n                    {name: 'Germany', code: 'DE'},\n                    {name: 'India', code: 'IN'},\n                    {name: 'Japan', code: 'JP'},\n                    {name: 'Spain', code: 'ES'},\n                    {name: 'United States', code: 'US'}\n                ]);\n                const groupedCities = ref([\n                    {\n                        label: 'Germany', code: 'DE',\n                        items: [\n                            {label: 'Berlin', value: 'Berlin'},\n                            {label: 'Frankfurt', value: 'Frankfurt'},\n                            {label: 'Hamburg', value: 'Hamburg'},\n                            {label: 'Munich', value: 'Munich'}\n                        ]\n                    },\n                    {\n                        label: 'USA', code: 'US',\n                        items: [\n                            {label: 'Chicago', value: 'Chicago'},\n                            {label: 'Los Angeles', value: 'Los Angeles'},\n                            {label: 'New York', value: 'New York'},\n                            {label: 'San Francisco', value: 'San Francisco'}\n                        ]\n                    },\n                    {\n                        label: 'Japan', code: 'JP',\n                        items: [\n                            {label: 'Kyoto', value: 'Kyoto'},\n                            {label: 'Osaka', value: 'Osaka'},\n                            {label: 'Tokyo', value: 'Tokyo'},\n                            {label: 'Yokohama', value: 'Yokohama'}\n                        ]\n                    }\n                ]);\n                const items = Array.from({ length: 1000 }, (_, i) => ({ label: `Item #${i}`, value: i }))\n\n                return { selectedCities1, selectedCities2, selectedCountries, selectedGroupedCities, cities, countries, groupedCities, items, selectedItems, selectAll }\n            },\n            methods: {\n                onSelectAllChange(event) {\n                    this.selectedItems = event.checked ? this.items.map((item) => item.value) : [];\n                    this.selectAll = event.checked;\n                },\n                onChange(event) {\n                    this.selectAll = event.value.length === this.items.length\n                }\n            },\n            components: {\n                \"p-multiselect\": primevue.multiselect\n            }\n        };\n\n        createApp(App)\n            .use(primevue.config.default)\n            .mount(\"#app\");\n        <\\/script>\n\n        <style>\n        .p-multiselect {\n            width: 18rem;\n        }\n\n        .multiselect-custom .p-multiselect-label:not(.p-placeholder) {\n            padding-top: .25rem;\n            padding-bottom: .25rem;\n        }\n\n        .multiselect-custom .country-item-value {\n            padding: .25rem .5rem;\n            border-radius: 3px;\n            display: inline-flex;\n            margin-right: .5rem;\n            background-color: var(--primary-color);\n            color: var(--primary-color-text);\n        }\n\n        .multiselect-custom .country-item-value img.flag {\n            width: 17px;\n        }\n\n        @media screen and (max-width: 640px) {\n            .p-multiselect {\n                width: 100%;\n            }\n        }\n        </style>"}}}}},$t=l("6b0d"),Zt=l.n($t);const qt=Zt()(zt,[["render",_t]]);var Qt=qt,Xt={data:function(){return{selectedCities1:null,selectedCities2:null,selectedCountries:null,selectedGroupedCities:null,selectedItems:null,selectAll:!1,cities:[{name:"New York",code:"NY"},{name:"Rome",code:"RM"},{name:"London",code:"LDN"},{name:"Istanbul",code:"IST"},{name:"Paris",code:"PRS"}],countries:[{name:"Australia",code:"AU"},{name:"Brazil",code:"BR"},{name:"China",code:"CN"},{name:"Egypt",code:"EG"},{name:"France",code:"FR"},{name:"Germany",code:"DE"},{name:"India",code:"IN"},{name:"Japan",code:"JP"},{name:"Spain",code:"ES"},{name:"United States",code:"US"}],groupedCities:[{label:"Germany",code:"DE",items:[{label:"Berlin",value:"Berlin"},{label:"Frankfurt",value:"Frankfurt"},{label:"Hamburg",value:"Hamburg"},{label:"Munich",value:"Munich"}]},{label:"USA",code:"US",items:[{label:"Chicago",value:"Chicago"},{label:"Los Angeles",value:"Los Angeles"},{label:"New York",value:"New York"},{label:"San Francisco",value:"San Francisco"}]},{label:"Japan",code:"JP",items:[{label:"Kyoto",value:"Kyoto"},{label:"Osaka",value:"Osaka"},{label:"Tokyo",value:"Tokyo"},{label:"Yokohama",value:"Yokohama"}]}],items:Array.from({length:1e3},(function(e,t){return{label:"Item #".concat(t),value:t}}))}},methods:{onSelectAllChange:function(e){this.selectedItems=e.checked?this.items.map((function(e){return e.value})):[],this.selectAll=e.checked},onChange:function(e){this.selectAll=e.value.length===this.items.length}},components:{MultiSelectDoc:Qt}};l("a9aa");const el=Zt()(Xt,[["render",f],["__scopeId","data-v-4b3a85a8"]]);t["default"]=el},"9d61":function(e,t,l){var n=l("24fb");t=n(!1),t.push([e.i,".p-multiselect[data-v-4b3a85a8]{width:18rem}[data-v-4b3a85a8] .multiselect-custom .p-multiselect-label:not(.p-placeholder){padding-top:.25rem;padding-bottom:.25rem}[data-v-4b3a85a8] .multiselect-custom .country-item-value{padding:.25rem .5rem;border-radius:3px;display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;margin-right:.5rem;background-color:var(--primary-color);color:var(--primary-color-text)}[data-v-4b3a85a8] .multiselect-custom .country-item-value img.flag{width:17px}@media screen and (max-width:640px){.p-multiselect[data-v-4b3a85a8]{width:100%}}",""]),e.exports=t},a9aa:function(e,t,l){"use strict";l("f233")},f233:function(e,t,l){var n=l("9d61");n.__esModule&&(n=n.default),"string"===typeof n&&(n=[[e.i,n,""]]),n.locals&&(e.exports=n.locals);var c=l("499e").default;c("4fbb6c0a",n,!0,{sourceMap:!1,shadowMode:!1})}}]);