(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d237d4c"],{fd91:function(e,t,n){"use strict";n.r(t);var l=n("7a23"),c={class:"content-section introduction"},b=Object(l["k"])("div",{class:"feature-intro"},[Object(l["k"])("h1",null,"TriStateCheckbox"),Object(l["k"])("p",null,'TriStateCheckbox is used to select either "true", "false" or "null" as the value.')],-1),o={class:"content-section implementation"},u={class:"card"},a={class:"field-checkbox m-0"},i={for:"checkbox"};function r(e,t,n,r,s,j){var d=Object(l["P"])("AppDemoActions"),k=Object(l["P"])("TriStateCheckbox"),O=Object(l["P"])("TriStateCheckboxDoc");return Object(l["H"])(),Object(l["j"])("div",null,[Object(l["k"])("div",c,[b,Object(l["o"])(d)]),Object(l["k"])("div",o,[Object(l["k"])("div",u,[Object(l["k"])("div",a,[Object(l["o"])(k,{modelValue:s.value,"onUpdate:modelValue":t[0]||(t[0]=function(e){return s.value=e}),inputId:"checkbox"},null,8,["modelValue"]),Object(l["k"])("label",i,Object(l["T"])(null==s.value?"null":s.value),1)])])]),Object(l["o"])(O)])}var s=Object(l["k"])("h5",null,"Import via Module",-1),j=Object(l["k"])("code",null,"\nimport TriStateCheckbox from 'primevue/tristatecheckbox';\n\n",-1),d=[j],k=Object(l["k"])("h5",null,"Import via CDN",-1),O=Object(l["k"])("code",null,'\n<script src="https://unpkg.com/primevue@^3/core/core.min.js"><\/script>\n<script src="https://unpkg.com/primevue@^3/tristatecheckbox/tristatecheckbox.min.js"><\/script>\n\n',-1),p=[O],h=Object(l["k"])("h5",null,"Getting Started",-1),m=Object(l["k"])("p",null,"A model can be bound using the standard v-model directive.",-1),v=Object(l["k"])("code",null,'\n<TriStateCheckbox v-model="value" />\n\n',-1),f=[v],x=Object(l["k"])("h5",null,"Properties",-1),g=Object(l["k"])("p",null,"Any property such as name and autofocus are passed to the underlying input element. Following is the additional property to configure the component.",-1),y=Object(l["k"])("div",{class:"doc-tablewrapper"},[Object(l["k"])("table",{class:"doc-table"},[Object(l["k"])("thead",null,[Object(l["k"])("tr",null,[Object(l["k"])("th",null,"Name"),Object(l["k"])("th",null,"Type"),Object(l["k"])("th",null,"Default"),Object(l["k"])("th",null,"Description")])]),Object(l["k"])("tbody",null,[Object(l["k"])("tr",null,[Object(l["k"])("td",null,"modelValue"),Object(l["k"])("td",null,"boolean"),Object(l["k"])("td",null,"null"),Object(l["k"])("td",null,"Value of the component.")]),Object(l["k"])("tr",null,[Object(l["k"])("td",null,"disabled"),Object(l["k"])("td",null,"boolean"),Object(l["k"])("td",null,"false"),Object(l["k"])("td",null,"When specified, disables the component.")]),Object(l["k"])("tr",null,[Object(l["k"])("td",null,"tabindex"),Object(l["k"])("td",null,"number"),Object(l["k"])("td",null,"0"),Object(l["k"])("td",null,"Index of the element in tabbing order.")]),Object(l["k"])("tr",null,[Object(l["k"])("td",null,"inputId"),Object(l["k"])("td",null,"string"),Object(l["k"])("td",null,"null"),Object(l["k"])("td",null,"Style class of the component input field.")]),Object(l["k"])("tr",null,[Object(l["k"])("td",null,"inputProps"),Object(l["k"])("td",null,"object"),Object(l["k"])("td",null,"null"),Object(l["k"])("td",null,"Uses to pass all properties of the HTMLInputElement to the focusable input element inside the component.")])])])],-1),S=Object(l["k"])("h5",null,"Events",-1),C=Object(l["k"])("p",null,"Any valid event such as focus and blur.",-1),w=Object(l["k"])("h5",null,"Styling",-1),T=Object(l["n"])("Following is the list of structural style classes, for theming classes visit "),A=Object(l["n"])("theming"),I=Object(l["n"])(" page."),D=Object(l["k"])("div",{class:"doc-tablewrapper"},[Object(l["k"])("table",{class:"doc-table"},[Object(l["k"])("thead",null,[Object(l["k"])("tr",null,[Object(l["k"])("th",null,"Name"),Object(l["k"])("th",null,"Element")])]),Object(l["k"])("tbody",null,[Object(l["k"])("tr",null,[Object(l["k"])("td",null,"p-chkbox"),Object(l["k"])("td",null,"Container element")]),Object(l["k"])("tr",null,[Object(l["k"])("td",null,"p-tristatechkbox"),Object(l["k"])("td",null,"Container element")]),Object(l["k"])("tr",null,[Object(l["k"])("td",null,"p-chkbox-box"),Object(l["k"])("td",null,"Container of icon.")]),Object(l["k"])("tr",null,[Object(l["k"])("td",null,"p-chkbox-icon"),Object(l["k"])("td",null,"Icon element.")])])])],-1),P=Object(l["k"])("h5",null,"Accessibility",-1),V=Object(l["k"])("h6",null,"Screen Reader",-1),H=Object(l["n"])(" TriStateCheckbox component uses an element with "),N=Object(l["k"])("i",null,"checkbox",-1),M=Object(l["n"])(" role. Value to describe the component can either be provided with "),L=Object(l["k"])("i",null,"aria-labelledby",-1),E=Object(l["n"])(" or "),F=Object(l["k"])("i",null,"aria-label",-1),R=Object(l["n"])(" props. Component adds an element with "),Z=Object(l["k"])("i",null,"aria-live",-1),_=Object(l["n"])(" attribute that is only visible to screen readers to read the value displayed. Values to read are defined with the "),G=Object(l["k"])("i",null,"trueLabel",-1),J=Object(l["n"])(", "),K=Object(l["k"])("i",null,"falseLabel",-1),U=Object(l["n"])(" and "),W=Object(l["k"])("i",null,"nullLabel",-1),B=Object(l["n"])(" keys of the "),Q=Object(l["k"])("i",null,"aria",-1),q=Object(l["n"])(" property from the "),z=Object(l["n"])("locale"),X=Object(l["n"])(" API. This is an example of a custom accessibility implementation as there is no one to one mapping between the component design and the WCAG specification. "),Y=Object(l["k"])("code",null,'\n<span id="chkbox1">Remember Me</span>\n<TriStateCheckbox aria-labelledby="chkbox1" />\n\n<TriStateCheckbox aria-label="Remember Me" />\n\n',-1),$=[Y],ee=Object(l["k"])("h6",null,"Keyboard Support",-1),te=Object(l["k"])("div",{class:"doc-tablewrapper"},[Object(l["k"])("table",{class:"doc-table"},[Object(l["k"])("thead",null,[Object(l["k"])("tr",null,[Object(l["k"])("th",null,"Key"),Object(l["k"])("th",null,"Function")])]),Object(l["k"])("tbody",null,[Object(l["k"])("tr",null,[Object(l["k"])("td",null,[Object(l["k"])("i",null,"tab")]),Object(l["k"])("td",null,"Moves focus to the checkbox.")]),Object(l["k"])("tr",null,[Object(l["k"])("td",null,[Object(l["k"])("i",null,"space")]),Object(l["k"])("td",null,"Toggles between the values.")]),Object(l["k"])("tr",null,[Object(l["k"])("td",null,[Object(l["k"])("i",null,"enter")]),Object(l["k"])("td",null,"Toggles between the values.")])])])],-1),ne=Object(l["k"])("h5",null,"Dependencies",-1),le=Object(l["k"])("p",null,"None.",-1);function ce(e,t,n,c,b,o){var u=Object(l["P"])("router-link"),a=Object(l["P"])("AppDoc"),i=Object(l["Q"])("code");return Object(l["H"])(),Object(l["h"])(a,{name:"TriStateCheckboxDemo",sources:b.sources,github:"tristatecheckbox/TriStateCheckboxDemo.vue"},{default:Object(l["Z"])((function(){return[s,Object(l["ab"])((Object(l["H"])(),Object(l["j"])("pre",null,d)),[[i,void 0,void 0,{script:!0}]]),k,Object(l["ab"])((Object(l["H"])(),Object(l["j"])("pre",null,p)),[[i]]),h,m,Object(l["ab"])((Object(l["H"])(),Object(l["j"])("pre",null,f)),[[i]]),x,g,y,S,C,w,Object(l["k"])("p",null,[T,Object(l["o"])(u,{to:"/theming"},{default:Object(l["Z"])((function(){return[A]})),_:1}),I]),D,P,V,Object(l["k"])("p",null,[H,N,M,L,E,F,R,Z,_,G,J,K,U,W,B,Q,q,Object(l["o"])(u,{to:"/locale"},{default:Object(l["Z"])((function(){return[z]})),_:1}),X]),Object(l["ab"])((Object(l["H"])(),Object(l["j"])("pre",null,$)),[[i]]),ee,te,ne,le]})),_:1},8,["sources"])}var be={data:function(){return{sources:{"options-api":{tabName:"Options API Source",content:'\n<template>\n    <div>\n        <div class="field-checkbox m-0">\n            <TriStateCheckbox inputId="checkbox" v-model="value" />\n            <label for="checkbox">{{value == null ? \'null\' : value}}</label>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            value: null\n        }\n    }\n}\n<\\/script>\n'},"composition-api":{tabName:"Composition API Source",content:'\n<template>\n    <div>\n        <div class="field-checkbox m-0">\n            <TriStateCheckbox inputId="checkbox" v-model="value" />\n            <label for="checkbox">{{value == null ? \'null\' : value}}</label>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { ref } from \'vue\';\n\nexport default {\n    setup() {\n        const value = ref(null);\n\n\t\treturn { value }\n    }\n}\n<\\/script>\n'},"browser-source":{tabName:"Browser Source",imports:'<script src="https://unpkg.com/primevue@^3/tristatecheckbox/tristatecheckbox.min.js"><\\/script>',content:'<div id="app">\n            <div class="field-checkbox m-0">\n                <p-tristatecheckbox input-id="checkbox" v-model="value"></p-tristatecheckbox>\n                <label for="checkbox">{{value == null ? \'null\' : value}}</label>\n            </div>\n        </div>\n\n        <script type="module">\n        const { createApp, ref } = Vue;\n\n        const App = {\n            setup() {\n                const value = ref(null);\n\n                return { value }\n            },\n            components: {\n                "p-tristatecheckbox": primevue.tristatecheckbox\n            }\n        };\n\n        createApp(App)\n            .use(primevue.config.default)\n            .mount("#app");\n        <\\/script>\n'}}}}},oe=n("6b0d"),ue=n.n(oe);const ae=ue()(be,[["render",ce]]);var ie=ae,re={data:function(){return{value:null}},components:{TriStateCheckboxDoc:ie}};const se=ue()(re,[["render",r]]);t["default"]=se}}]);