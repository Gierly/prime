(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d207b59"],{a24f:function(e,t,l){"use strict";l.r(t);l("b0c0");var c=l("7a23"),n={class:"content-section introduction"},i=Object(c["k"])("div",{class:"feature-intro"},[Object(c["k"])("h1",null,"Checkbox"),Object(c["k"])("p",null,"Checkbox is an extension to standard checkbox element with theming.")],-1),a={class:"content-section implementation"},o={class:"card"},b=Object(c["k"])("h5",null,"Basic",-1),u={class:"field-checkbox"},d=Object(c["k"])("label",{for:"binary"},"Remember Me",-1),s=Object(c["k"])("h5",null,"Multiple",-1),r={class:"field-checkbox"},k=Object(c["k"])("label",{for:"city1"},"Chicago",-1),j={class:"field-checkbox"},O=Object(c["k"])("label",{for:"city2"},"Los Angeles",-1),h={class:"field-checkbox"},p=Object(c["k"])("label",{for:"city3"},"New York",-1),m={class:"field-checkbox"},y=Object(c["k"])("label",{for:"city4"},"San Francisco",-1),v=Object(c["k"])("h5",null,"Dynamic Values, Preselection, Value Binding and Disabled Option",-1),f=["for"];function g(e,t,l,g,x,C){var I=Object(c["P"])("AppDemoActions"),V=Object(c["P"])("Checkbox"),w=Object(c["P"])("CheckboxDoc");return Object(c["H"])(),Object(c["j"])("div",null,[Object(c["k"])("div",n,[i,Object(c["o"])(I)]),Object(c["k"])("div",a,[Object(c["k"])("div",o,[b,Object(c["k"])("div",u,[Object(c["o"])(V,{modelValue:x.checked,"onUpdate:modelValue":t[0]||(t[0]=function(e){return x.checked=e}),inputId:"binary",binary:!0},null,8,["modelValue"]),d]),s,Object(c["k"])("div",r,[Object(c["o"])(V,{modelValue:x.cities,"onUpdate:modelValue":t[1]||(t[1]=function(e){return x.cities=e}),inputId:"city1",name:"city",value:"Chicago"},null,8,["modelValue"]),k]),Object(c["k"])("div",j,[Object(c["o"])(V,{modelValue:x.cities,"onUpdate:modelValue":t[2]||(t[2]=function(e){return x.cities=e}),inputId:"city2",name:"city",value:"Los Angeles"},null,8,["modelValue"]),O]),Object(c["k"])("div",h,[Object(c["o"])(V,{modelValue:x.cities,"onUpdate:modelValue":t[3]||(t[3]=function(e){return x.cities=e}),inputId:"city3",name:"city",value:"New York"},null,8,["modelValue"]),p]),Object(c["k"])("div",m,[Object(c["o"])(V,{modelValue:x.cities,"onUpdate:modelValue":t[4]||(t[4]=function(e){return x.cities=e}),inputId:"city4",name:"city",value:"San Francisco"},null,8,["modelValue"]),y]),v,(Object(c["H"])(!0),Object(c["j"])(c["a"],null,Object(c["N"])(x.categories,(function(e){return Object(c["H"])(),Object(c["j"])("div",{key:e.key,class:"field-checkbox"},[Object(c["o"])(V,{modelValue:x.selectedCategories,"onUpdate:modelValue":t[5]||(t[5]=function(e){return x.selectedCategories=e}),inputId:e.key,name:"category",value:e.name,disabled:"R"===e.key},null,8,["modelValue","inputId","value","disabled"]),Object(c["k"])("label",{for:e.key},Object(c["T"])(e.name),9,f)])})),128))])]),Object(c["o"])(w)])}l("fb6a");var x=Object(c["k"])("h5",null,"Import via Module",-1),C=Object(c["k"])("code",null,"\nimport Checkbox from 'primevue/checkbox';\n\n",-1),I=[C],V=Object(c["k"])("h5",null,"Import via CDN",-1),w=Object(c["k"])("code",null,'\n<script src="https://unpkg.com/primevue@^3/core/core.min.js"><\/script>\n<script src="https://unpkg.com/primevue@^3/checkbox/checkbox.min.js"><\/script>\n\n',-1),A=[w],P=Object(c["k"])("h5",null,"Getting Started",-1),M=Object(c["k"])("p",null,"Checkbox can either be used in multiple selection with other checkboxes or as a single checkbox to provide a boolean value.",-1),N=Object(c["k"])("code",null,'\n<Checkbox v-model="checked" :binary="true" />\n\n',-1),D=[N],S=Object(c["k"])("h5",null,"Multiple Values",-1),R=Object(c["k"])("p",null,"Multiple mode is enabled by default, v-model property refers to an array to bind the selected values.",-1),B=Object(c["k"])("code",null,'\n<Checkbox name="city" value="Chicago" v-model="cities" />\n<Checkbox name="city" value="Los Angeles" v-model="cities" />\n<Checkbox name="city" value="New York" v-model="cities" />\n<Checkbox name="city" value="San Francisco" v-model="cities" />\n\n',-1),F=[B],H=Object(c["k"])("code",null,"\nexport default {\n\tdata() {\n\t\treturn {\n\t\t\tcities: []\n\t\t}\n\t}\n}\n\n",-1),L=[H],Y=Object(c["k"])("p",null,"As v-model is two-way binding enabled, prepopulating the model array with values is enough to display the related checkboxes as checked by default.",-1),U=Object(c["k"])("h5",null,"Properties",-1),T=Object(c["k"])("p",null,"Any valid attribute is passed to the root element implicitly, extended properties are as follows;",-1),E=Object(c["k"])("div",{class:"doc-tablewrapper"},[Object(c["k"])("table",{class:"doc-table"},[Object(c["k"])("thead",null,[Object(c["k"])("tr",null,[Object(c["k"])("th",null,"Name"),Object(c["k"])("th",null,"Type"),Object(c["k"])("th",null,"Default"),Object(c["k"])("th",null,"Description")])]),Object(c["k"])("tbody",null,[Object(c["k"])("tr",null,[Object(c["k"])("td",null,"value"),Object(c["k"])("td",null,"any"),Object(c["k"])("td",null,"null"),Object(c["k"])("td",null,"Value of the checkbox.")]),Object(c["k"])("tr",null,[Object(c["k"])("td",null,"modelValue"),Object(c["k"])("td",null,"any"),Object(c["k"])("td",null,"null"),Object(c["k"])("td",null,"Value binding of the checkbox.")]),Object(c["k"])("tr",null,[Object(c["k"])("td",null,"name"),Object(c["k"])("td",null,"string"),Object(c["k"])("td",null,"null"),Object(c["k"])("td",null,"Name of the input element.")]),Object(c["k"])("tr",null,[Object(c["k"])("td",null,"binary"),Object(c["k"])("td",null,"boolean"),Object(c["k"])("td",null,"false"),Object(c["k"])("td",null,"Allows to select a boolean value instead of multiple values.")]),Object(c["k"])("tr",null,[Object(c["k"])("td",null,"trueValue"),Object(c["k"])("td",null,"any"),Object(c["k"])("td",null,"null"),Object(c["k"])("td",null,"Value in checked state.")]),Object(c["k"])("tr",null,[Object(c["k"])("td",null,"falseValue"),Object(c["k"])("td",null,"any"),Object(c["k"])("td",null,"null"),Object(c["k"])("td",null,"Value in unchecked state.")]),Object(c["k"])("tr",null,[Object(c["k"])("td",null,"disabled"),Object(c["k"])("td",null,"boolean"),Object(c["k"])("td",null,"false"),Object(c["k"])("td",null,"When present, it specifies that the element should be disabled.")]),Object(c["k"])("tr",null,[Object(c["k"])("td",null,"readonly"),Object(c["k"])("td",null,"boolean"),Object(c["k"])("td",null,"false"),Object(c["k"])("td",null,"When present, it specifies that an input field is read-only.")]),Object(c["k"])("tr",null,[Object(c["k"])("td",null,"required"),Object(c["k"])("td",null,"boolean"),Object(c["k"])("td",null,"false"),Object(c["k"])("td",null,"When present, it specifies that the element is required.")]),Object(c["k"])("tr",null,[Object(c["k"])("td",null,"tabindex"),Object(c["k"])("td",null,"number"),Object(c["k"])("td",null,"null"),Object(c["k"])("td",null,"Index of the element in tabbing order.")]),Object(c["k"])("tr",null,[Object(c["k"])("td",null,"inputId"),Object(c["k"])("td",null,"string"),Object(c["k"])("td",null,"null"),Object(c["k"])("td",null,"Identifier of the underlying input element.")]),Object(c["k"])("tr",null,[Object(c["k"])("td",null,"inputClass"),Object(c["k"])("td",null,"any"),Object(c["k"])("td",null,"null"),Object(c["k"])("td",null,"Style class of the input field.")]),Object(c["k"])("tr",null,[Object(c["k"])("td",null,"inputStyle"),Object(c["k"])("td",null,"any"),Object(c["k"])("td",null,"null"),Object(c["k"])("td",null,"Inline style of the input field.")]),Object(c["k"])("tr",null,[Object(c["k"])("td",null,"inputProps"),Object(c["k"])("td",null,"object"),Object(c["k"])("td",null,"null"),Object(c["k"])("td",null,"Uses to pass all properties of the HTMLInputElement to the focusable input element inside the component.")])])])],-1),W=Object(c["k"])("h5",null,"Events",-1),q=Object(c["k"])("p",null,"In addition to the following events, any other valid events such as focus and blur are passed implicitly.",-1),J=Object(c["k"])("div",{class:"doc-tablewrapper"},[Object(c["k"])("table",{class:"doc-table"},[Object(c["k"])("thead",null,[Object(c["k"])("tr",null,[Object(c["k"])("th",null,"Name"),Object(c["k"])("th",null,"Parameters"),Object(c["k"])("th",null,"Description")])]),Object(c["k"])("tbody",null,[Object(c["k"])("tr",null,[Object(c["k"])("td",null,"click"),Object(c["k"])("td",null,"event: Browser event"),Object(c["k"])("td",null,"Callback to invoke on value click.")]),Object(c["k"])("tr",null,[Object(c["k"])("td",null,"change"),Object(c["k"])("td",null,"event: Browser event"),Object(c["k"])("td",null,"Callback to invoke on value change.")]),Object(c["k"])("tr",null,[Object(c["k"])("td",null,"input"),Object(c["k"])("td",null,"value: New value"),Object(c["k"])("td",null,"Callback to invoke on value change.")])])])],-1),K=Object(c["k"])("h5",null,"Styling",-1),Z=Object(c["n"])("Following is the list of structural style classes, for theming classes visit "),_=Object(c["n"])("theming"),G=Object(c["n"])(" page."),Q=Object(c["k"])("div",{class:"doc-tablewrapper"},[Object(c["k"])("table",{class:"doc-table"},[Object(c["k"])("thead",null,[Object(c["k"])("tr",null,[Object(c["k"])("th",null,"Name"),Object(c["k"])("th",null,"Element")])]),Object(c["k"])("tbody",null,[Object(c["k"])("tr",null,[Object(c["k"])("td",null,"p-checkbox"),Object(c["k"])("td",null,"Container element")]),Object(c["k"])("tr",null,[Object(c["k"])("td",null,"p-checkbox-box"),Object(c["k"])("td",null,"Container of icon.")]),Object(c["k"])("tr",null,[Object(c["k"])("td",null,"p-checkbox-icon"),Object(c["k"])("td",null,"Icon element.")])])])],-1),z=Object(c["k"])("h5",null,"Accessibility",-1),X=Object(c["k"])("h6",null,"Screen Reader",-1),$=Object(c["k"])("p",null,[Object(c["n"])(" Checkbox component uses a hidden native checkbox element internally that is only visible to screen readers. Value to describe the component can either be provided via "),Object(c["k"])("i",null,"label"),Object(c["n"])(" tag combined with "),Object(c["k"])("i",null,"id"),Object(c["n"])(" prop or using "),Object(c["k"])("i",null,"aria-labelledby"),Object(c["n"])(", "),Object(c["k"])("i",null,"aria-label"),Object(c["n"])(" props. ")],-1),ee=Object(c["k"])("code",null,'\n<label for="chkbox1">Remember Me</label>\n<Checkbox inputId="chkbox1" />\n\n<span id="chkbox2">Remember Me</span>\n<Checkbox aria-labelledby="chkbox2" />\n\n<Checkbox aria-label="Remember Me" />\n\n',-1),te=[ee],le=Object(c["k"])("h6",null,"Keyboard Support",-1),ce=Object(c["k"])("div",{class:"doc-tablewrapper"},[Object(c["k"])("table",{class:"doc-table"},[Object(c["k"])("thead",null,[Object(c["k"])("tr",null,[Object(c["k"])("th",null,"Key"),Object(c["k"])("th",null,"Function")])]),Object(c["k"])("tbody",null,[Object(c["k"])("tr",null,[Object(c["k"])("td",null,[Object(c["k"])("i",null,"tab")]),Object(c["k"])("td",null,"Moves focus to the checkbox.")]),Object(c["k"])("tr",null,[Object(c["k"])("td",null,[Object(c["k"])("i",null,"space")]),Object(c["k"])("td",null,"Toggles the checked state.")])])])],-1),ne=Object(c["k"])("h5",null,"Dependencies",-1),ie=Object(c["k"])("p",null,"None.",-1);function ae(e,t,l,n,i,a){var o=Object(c["P"])("router-link"),b=Object(c["P"])("AppDoc"),u=Object(c["Q"])("code");return Object(c["H"])(),Object(c["h"])(b,{name:"CheckboxDemo",sources:i.sources,github:"checkbox/CheckboxDemo.vue"},{default:Object(c["Z"])((function(){return[x,Object(c["ab"])((Object(c["H"])(),Object(c["j"])("pre",null,I)),[[u,void 0,void 0,{script:!0}]]),V,Object(c["ab"])((Object(c["H"])(),Object(c["j"])("pre",null,A)),[[u]]),P,M,Object(c["ab"])((Object(c["H"])(),Object(c["j"])("pre",null,D)),[[u]]),S,R,Object(c["ab"])((Object(c["H"])(),Object(c["j"])("pre",null,F)),[[u]]),Object(c["ab"])((Object(c["H"])(),Object(c["j"])("pre",null,L)),[[u,void 0,void 0,{script:!0}]]),Y,U,T,E,W,q,J,K,Object(c["k"])("p",null,[Z,Object(c["o"])(o,{to:"/theming"},{default:Object(c["Z"])((function(){return[_]})),_:1}),G]),Q,z,X,$,Object(c["ab"])((Object(c["H"])(),Object(c["j"])("pre",null,te)),[[u]]),le,ce,ne,ie]})),_:1},8,["sources"])}var oe={data:function(){return{sources:{"options-api":{tabName:"Options API Source",content:'\n<template>\n    <div>\n        <h5>Basic</h5>\n        <div class="field-checkbox">\n            <Checkbox inputId="binary" v-model="checked" :binary="true" />\n            <label for="binary">{{checked}}</label>\n        </div>\n\n        <h5>Multiple</h5>\n        <div class="field-checkbox">\n            <Checkbox inputId="city1" name="city" value="Chicago" v-model="cities" />\n            <label for="city1">Chicago</label>\n        </div>\n        <div class="field-checkbox">\n            <Checkbox inputId="city2" name="city" value="Los Angeles" v-model="cities" />\n            <label for="city2">Los Angeles</label>\n        </div>\n        <div class="field-checkbox">\n            <Checkbox inputId="city3" name="city" value="New York" v-model="cities" />\n            <label for="city3">New York</label>\n        </div>\n        <div class="field-checkbox">\n            <Checkbox inputId="city4" name="city" value="San Francisco" v-model="cities" />\n            <label for="city4">San Francisco</label>\n        </div>\n\n        <h5>Dynamic Values, Preselection, Value Binding and Disabled Option</h5>\n        <div v-for="category of categories" :key="category.key" class="field-checkbox">\n            <Checkbox :inputId="category.key" name="category" :value="category.name" v-model="selectedCategories" :disabled="category.key === \'R\'"/>\n            <label :for="category.key">{{category.name}}</label>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            checked: false,\n            cities: [],\n            categories: [{name: \'Accounting\', key: \'A\'}, {name: \'Marketing\', key: \'M\'}, {name: \'Production\', key: \'P\'}, {name: \'Research\', key: \'R\'}],\n            selectedCategories: []\n        }\n    },\n    created() {\n        this.selectedCategories = this.categories.slice(1,3);\n    }\n}\n<\\/script>'},"composition-api":{tabName:"Composition API Source",content:'\n<template>\n    <div>\n        <h5>Basic</h5>\n        <div class="field-checkbox">\n            <Checkbox inputId="binary" v-model="checked" :binary="true" />\n            <label for="binary">{{checked}}</label>\n        </div>\n\n        <h5>Multiple</h5>\n        <div class="field-checkbox">\n            <Checkbox inputId="city1" name="city" value="Chicago" v-model="cities" />\n            <label for="city1">Chicago</label>\n        </div>\n        <div class="field-checkbox">\n            <Checkbox inputId="city2" name="city" value="Los Angeles" v-model="cities" />\n            <label for="city2">Los Angeles</label>\n        </div>\n        <div class="field-checkbox">\n            <Checkbox inputId="city3" name="city" value="New York" v-model="cities" />\n            <label for="city3">New York</label>\n        </div>\n        <div class="field-checkbox">\n            <Checkbox inputId="city4" name="city" value="San Francisco" v-model="cities" />\n            <label for="city4">San Francisco</label>\n        </div>\n\n        <h5>Dynamic Values, Preselection, Value Binding and Disabled Option</h5>\n        <div v-for="category of categories" :key="category.key" class="field-checkbox">\n            <Checkbox :inputId="category.key" name="category" :value="category.name" v-model="selectedCategories" :disabled="category.key === \'R\'"/>\n            <label :for="category.key">{{category.name}}</label>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { ref } from \'vue\';\nexport default {\n    setup() {\n        const checked = ref(false);\n        const cities = ref([]);\n        const categories = ref([\n            {name: \'Accounting\', key: \'A\'},\n            {name: \'Marketing\', key: \'M\'},\n            {name: \'Production\', key: \'P\'},\n            {name: \'Research\', key: \'R\'}\n        ]);\n        const selectedCategories = ref(categories.value.slice(1,3));\n\n        return { checked, cities, categories, selectedCategories }\n    }\n}\n<\\/script>'},"browser-source":{tabName:"Browser Source",imports:'<script src="https://unpkg.com/primevue@^3/checkbox/checkbox.min.js"><\\/script>',content:'<div id="app">\n        <h5>Basic</h5>\n        <div class="field-checkbox">\n            <p-checkbox inputId="binary" v-model="checked" :binary="true"></p-checkbox>\n            <label for="binary">{{checked}}</label>\n        </div>\n\n        <h5>Multiple</h5>\n        <div class="field-checkbox">\n            <p-checkbox inputId="city1" name="city" value="Chicago" v-model="cities"></p-checkbox>\n            <label for="city1">Chicago</label>\n        </div>\n        <div class="field-checkbox">\n            <p-checkbox inputId="city2" name="city" value="Los Angeles" v-model="cities"></p-checkbox>\n            <label for="city2">Los Angeles</label>\n        </div>\n        <div class="field-checkbox">\n            <p-checkbox inputId="city3" name="city" value="New York" v-model="cities"></p-checkbox>\n            <label for="city3">New York</label>\n        </div>\n        <div class="field-checkbox">\n            <p-checkbox inputId="city4" name="city" value="San Francisco" v-model="cities"></p-checkbox>\n            <label for="city4">San Francisco</label>\n        </div>\n\n        <h5>Dynamic Values, Preselection, Value Binding and Disabled Option</h5>\n        <div v-for="category of categories" :key="category.key" class="field-checkbox">\n            <p-checkbox :inputId="category.key" name="category" :value="category.name" v-model="selectedCategories" :disabled="category.key === \'R\'"></p-checkbox>\n            <label :for="category.key">{{category.name}}</label>\n        </div>\n    </div>\n\n    <script type="module">\n        const { createApp, ref } = Vue;\n\n        const App = {\n            setup() {\n                const checked = ref(false);\n                const cities = ref([]);\n                const categories = ref([\n                    {name: \'Accounting\', key: \'A\'},\n                    {name: \'Marketing\', key: \'M\'},\n                    {name: \'Production\', key: \'P\'},\n                    {name: \'Research\', key: \'R\'}\n                ]);\n                const selectedCategories = ref(categories.value.slice(1,3));\n\n                return { checked, cities, categories, selectedCategories }\n            },\n            components: {\n                "p-checkbox": primevue.checkbox\n            }\n        };\n\n        createApp(App).use(primevue.config.default).mount(\'#app\');\n    <\\/script>\n'}}}}},be=l("6b0d"),ue=l.n(be);const de=ue()(oe,[["render",ae]]);var se=de,re={data:function(){return{checked:!1,cities:[],categories:[{name:"Accounting",key:"A"},{name:"Marketing",key:"M"},{name:"Production",key:"P"},{name:"Research",key:"R"}],selectedCategories:[]}},created:function(){this.selectedCategories=this.categories.slice(1,3)},components:{CheckboxDoc:se}};const ke=ue()(re,[["render",g]]);t["default"]=ke}}]);